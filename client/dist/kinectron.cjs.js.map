{"version":3,"file":"kinectron.cjs.js","sources":["../../node_modules/peerjs-js-binarypack/dist/binarypack.mjs","../../node_modules/webrtc-adapter/src/js/utils.js","../../node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","../../node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","../../node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","../../node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","../../node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","../../node_modules/webrtc-adapter/src/js/safari/safari_shim.js","../../node_modules/sdp/sdp.js","../../node_modules/webrtc-adapter/src/js/common_shim.js","../../node_modules/webrtc-adapter/src/js/adapter_core.js","../../node_modules/webrtc-adapter/src/js/adapter_factory.js","../../node_modules/peerjs/dist/bundler.mjs","../src/peer/errors.js","../src/peer/peerConfig.js","../src/peer/ngrokState.js","../src/utils/debug.js","../src/peer/peerConnection.js","../src/utils/imageProcessing.js","../src/streams/streamHandlers.js","../src/index.js","../src/kinectron.js"],"sourcesContent":["class $e8379818650e2442$export$93654d4f2d6cd524 {\n    constructor(){\n        this.encoder = new TextEncoder();\n        this._pieces = [];\n        this._parts = [];\n    }\n    append_buffer(data) {\n        this.flush();\n        this._parts.push(data);\n    }\n    append(data) {\n        this._pieces.push(data);\n    }\n    flush() {\n        if (this._pieces.length > 0) {\n            const buf = new Uint8Array(this._pieces);\n            this._parts.push(buf);\n            this._pieces = [];\n        }\n    }\n    toArrayBuffer() {\n        const buffer = [];\n        for (const part of this._parts)buffer.push(part);\n        return $e8379818650e2442$var$concatArrayBuffers(buffer).buffer;\n    }\n}\nfunction $e8379818650e2442$var$concatArrayBuffers(bufs) {\n    let size = 0;\n    for (const buf of bufs)size += buf.byteLength;\n    const result = new Uint8Array(size);\n    let offset = 0;\n    for (const buf of bufs){\n        const view = new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n        result.set(view, offset);\n        offset += buf.byteLength;\n    }\n    return result;\n}\n\n\nfunction $0cfd7828ad59115f$export$417857010dc9287f(data) {\n    const unpacker = new $0cfd7828ad59115f$var$Unpacker(data);\n    return unpacker.unpack();\n}\nfunction $0cfd7828ad59115f$export$2a703dbb0cb35339(data) {\n    const packer = new $0cfd7828ad59115f$export$b9ec4b114aa40074();\n    const res = packer.pack(data);\n    if (res instanceof Promise) return res.then(()=>packer.getBuffer());\n    return packer.getBuffer();\n}\nclass $0cfd7828ad59115f$var$Unpacker {\n    constructor(data){\n        this.index = 0;\n        this.dataBuffer = data;\n        this.dataView = new Uint8Array(this.dataBuffer);\n        this.length = this.dataBuffer.byteLength;\n    }\n    unpack() {\n        const type = this.unpack_uint8();\n        if (type < 0x80) return type;\n        else if ((type ^ 0xe0) < 0x20) return (type ^ 0xe0) - 0x20;\n        let size;\n        if ((size = type ^ 0xa0) <= 0x0f) return this.unpack_raw(size);\n        else if ((size = type ^ 0xb0) <= 0x0f) return this.unpack_string(size);\n        else if ((size = type ^ 0x90) <= 0x0f) return this.unpack_array(size);\n        else if ((size = type ^ 0x80) <= 0x0f) return this.unpack_map(size);\n        switch(type){\n            case 0xc0:\n                return null;\n            case 0xc1:\n                return undefined;\n            case 0xc2:\n                return false;\n            case 0xc3:\n                return true;\n            case 0xca:\n                return this.unpack_float();\n            case 0xcb:\n                return this.unpack_double();\n            case 0xcc:\n                return this.unpack_uint8();\n            case 0xcd:\n                return this.unpack_uint16();\n            case 0xce:\n                return this.unpack_uint32();\n            case 0xcf:\n                return this.unpack_uint64();\n            case 0xd0:\n                return this.unpack_int8();\n            case 0xd1:\n                return this.unpack_int16();\n            case 0xd2:\n                return this.unpack_int32();\n            case 0xd3:\n                return this.unpack_int64();\n            case 0xd4:\n                return undefined;\n            case 0xd5:\n                return undefined;\n            case 0xd6:\n                return undefined;\n            case 0xd7:\n                return undefined;\n            case 0xd8:\n                size = this.unpack_uint16();\n                return this.unpack_string(size);\n            case 0xd9:\n                size = this.unpack_uint32();\n                return this.unpack_string(size);\n            case 0xda:\n                size = this.unpack_uint16();\n                return this.unpack_raw(size);\n            case 0xdb:\n                size = this.unpack_uint32();\n                return this.unpack_raw(size);\n            case 0xdc:\n                size = this.unpack_uint16();\n                return this.unpack_array(size);\n            case 0xdd:\n                size = this.unpack_uint32();\n                return this.unpack_array(size);\n            case 0xde:\n                size = this.unpack_uint16();\n                return this.unpack_map(size);\n            case 0xdf:\n                size = this.unpack_uint32();\n                return this.unpack_map(size);\n        }\n    }\n    unpack_uint8() {\n        const byte = this.dataView[this.index] & 0xff;\n        this.index++;\n        return byte;\n    }\n    unpack_uint16() {\n        const bytes = this.read(2);\n        const uint16 = (bytes[0] & 0xff) * 256 + (bytes[1] & 0xff);\n        this.index += 2;\n        return uint16;\n    }\n    unpack_uint32() {\n        const bytes = this.read(4);\n        const uint32 = ((bytes[0] * 256 + bytes[1]) * 256 + bytes[2]) * 256 + bytes[3];\n        this.index += 4;\n        return uint32;\n    }\n    unpack_uint64() {\n        const bytes = this.read(8);\n        const uint64 = ((((((bytes[0] * 256 + bytes[1]) * 256 + bytes[2]) * 256 + bytes[3]) * 256 + bytes[4]) * 256 + bytes[5]) * 256 + bytes[6]) * 256 + bytes[7];\n        this.index += 8;\n        return uint64;\n    }\n    unpack_int8() {\n        const uint8 = this.unpack_uint8();\n        return uint8 < 0x80 ? uint8 : uint8 - 256;\n    }\n    unpack_int16() {\n        const uint16 = this.unpack_uint16();\n        return uint16 < 0x8000 ? uint16 : uint16 - 65536;\n    }\n    unpack_int32() {\n        const uint32 = this.unpack_uint32();\n        return uint32 < 2 ** 31 ? uint32 : uint32 - 2 ** 32;\n    }\n    unpack_int64() {\n        const uint64 = this.unpack_uint64();\n        return uint64 < 2 ** 63 ? uint64 : uint64 - 2 ** 64;\n    }\n    unpack_raw(size) {\n        if (this.length < this.index + size) throw new Error(`BinaryPackFailure: index is out of range ${this.index} ${size} ${this.length}`);\n        const buf = this.dataBuffer.slice(this.index, this.index + size);\n        this.index += size;\n        return buf;\n    }\n    unpack_string(size) {\n        const bytes = this.read(size);\n        let i = 0;\n        let str = \"\";\n        let c;\n        let code;\n        while(i < size){\n            c = bytes[i];\n            // The length of a UTF-8 sequence is specified in the first byte:\n            // 0xxxxxxx means length 1,\n            // 110xxxxx means length 2,\n            // 1110xxxx means length 3,\n            // 11110xxx means length 4.\n            // 10xxxxxx is for non-initial bytes.\n            if (c < 0xa0) {\n                // One-byte sequence: bits 0xxxxxxx\n                code = c;\n                i++;\n            } else if ((c ^ 0xc0) < 0x20) {\n                // Two-byte sequence: bits 110xxxxx 10xxxxxx\n                code = (c & 0x1f) << 6 | bytes[i + 1] & 0x3f;\n                i += 2;\n            } else if ((c ^ 0xe0) < 0x10) {\n                // Three-byte sequence: bits 1110xxxx 10xxxxxx 10xxxxxx\n                code = (c & 0x0f) << 12 | (bytes[i + 1] & 0x3f) << 6 | bytes[i + 2] & 0x3f;\n                i += 3;\n            } else {\n                // Four-byte sequence: bits 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n                code = (c & 0x07) << 18 | (bytes[i + 1] & 0x3f) << 12 | (bytes[i + 2] & 0x3f) << 6 | bytes[i + 3] & 0x3f;\n                i += 4;\n            }\n            str += String.fromCodePoint(code);\n        }\n        this.index += size;\n        return str;\n    }\n    unpack_array(size) {\n        const objects = new Array(size);\n        for(let i = 0; i < size; i++)objects[i] = this.unpack();\n        return objects;\n    }\n    unpack_map(size) {\n        const map = {};\n        for(let i = 0; i < size; i++){\n            const key = this.unpack();\n            map[key] = this.unpack();\n        }\n        return map;\n    }\n    unpack_float() {\n        const uint32 = this.unpack_uint32();\n        const sign = uint32 >> 31;\n        const exp = (uint32 >> 23 & 0xff) - 127;\n        const fraction = uint32 & 0x7fffff | 0x800000;\n        return (sign === 0 ? 1 : -1) * fraction * 2 ** (exp - 23);\n    }\n    unpack_double() {\n        const h32 = this.unpack_uint32();\n        const l32 = this.unpack_uint32();\n        const sign = h32 >> 31;\n        const exp = (h32 >> 20 & 0x7ff) - 1023;\n        const hfrac = h32 & 0xfffff | 0x100000;\n        const frac = hfrac * 2 ** (exp - 20) + l32 * 2 ** (exp - 52);\n        return (sign === 0 ? 1 : -1) * frac;\n    }\n    read(length) {\n        const j = this.index;\n        if (j + length <= this.length) return this.dataView.subarray(j, j + length);\n        else throw new Error(\"BinaryPackFailure: read index out of range\");\n    }\n}\nclass $0cfd7828ad59115f$export$b9ec4b114aa40074 {\n    getBuffer() {\n        return this._bufferBuilder.toArrayBuffer();\n    }\n    pack(value) {\n        if (typeof value === \"string\") this.pack_string(value);\n        else if (typeof value === \"number\") {\n            if (Math.floor(value) === value) this.pack_integer(value);\n            else this.pack_double(value);\n        } else if (typeof value === \"boolean\") {\n            if (value === true) this._bufferBuilder.append(0xc3);\n            else if (value === false) this._bufferBuilder.append(0xc2);\n        } else if (value === undefined) this._bufferBuilder.append(0xc0);\n        else if (typeof value === \"object\") {\n            if (value === null) this._bufferBuilder.append(0xc0);\n            else {\n                const constructor = value.constructor;\n                if (value instanceof Array) {\n                    const res = this.pack_array(value);\n                    if (res instanceof Promise) return res.then(()=>this._bufferBuilder.flush());\n                } else if (value instanceof ArrayBuffer) this.pack_bin(new Uint8Array(value));\n                else if (\"BYTES_PER_ELEMENT\" in value) {\n                    const v = value;\n                    this.pack_bin(new Uint8Array(v.buffer, v.byteOffset, v.byteLength));\n                } else if (value instanceof Date) this.pack_string(value.toString());\n                else if (value instanceof Blob) return value.arrayBuffer().then((buffer)=>{\n                    this.pack_bin(new Uint8Array(buffer));\n                    this._bufferBuilder.flush();\n                });\n                else if (constructor == Object || constructor.toString().startsWith(\"class\")) {\n                    const res = this.pack_object(value);\n                    if (res instanceof Promise) return res.then(()=>this._bufferBuilder.flush());\n                } else throw new Error(`Type \"${constructor.toString()}\" not yet supported`);\n            }\n        } else throw new Error(`Type \"${typeof value}\" not yet supported`);\n        this._bufferBuilder.flush();\n    }\n    pack_bin(blob) {\n        const length = blob.length;\n        if (length <= 0x0f) this.pack_uint8(0xa0 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xda);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xdb);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        this._bufferBuilder.append_buffer(blob);\n    }\n    pack_string(str) {\n        const encoded = this._textEncoder.encode(str);\n        const length = encoded.length;\n        if (length <= 0x0f) this.pack_uint8(0xb0 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xd8);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xd9);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        this._bufferBuilder.append_buffer(encoded);\n    }\n    pack_array(ary) {\n        const length = ary.length;\n        if (length <= 0x0f) this.pack_uint8(0x90 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xdc);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xdd);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        const packNext = (index)=>{\n            if (index < length) {\n                const res = this.pack(ary[index]);\n                if (res instanceof Promise) return res.then(()=>packNext(index + 1));\n                return packNext(index + 1);\n            }\n        };\n        return packNext(0);\n    }\n    pack_integer(num) {\n        if (num >= -32 && num <= 0x7f) this._bufferBuilder.append(num & 0xff);\n        else if (num >= 0x00 && num <= 0xff) {\n            this._bufferBuilder.append(0xcc);\n            this.pack_uint8(num);\n        } else if (num >= -128 && num <= 0x7f) {\n            this._bufferBuilder.append(0xd0);\n            this.pack_int8(num);\n        } else if (num >= 0x0000 && num <= 0xffff) {\n            this._bufferBuilder.append(0xcd);\n            this.pack_uint16(num);\n        } else if (num >= -32768 && num <= 0x7fff) {\n            this._bufferBuilder.append(0xd1);\n            this.pack_int16(num);\n        } else if (num >= 0x00000000 && num <= 0xffffffff) {\n            this._bufferBuilder.append(0xce);\n            this.pack_uint32(num);\n        } else if (num >= -2147483648 && num <= 0x7fffffff) {\n            this._bufferBuilder.append(0xd2);\n            this.pack_int32(num);\n        } else if (num >= -9223372036854776000 && num <= 0x7fffffffffffffff) {\n            this._bufferBuilder.append(0xd3);\n            this.pack_int64(num);\n        } else if (num >= 0x0000000000000000 && num <= 0xffffffffffffffff) {\n            this._bufferBuilder.append(0xcf);\n            this.pack_uint64(num);\n        } else throw new Error(\"Invalid integer\");\n    }\n    pack_double(num) {\n        let sign = 0;\n        if (num < 0) {\n            sign = 1;\n            num = -num;\n        }\n        const exp = Math.floor(Math.log(num) / Math.LN2);\n        const frac0 = num / 2 ** exp - 1;\n        const frac1 = Math.floor(frac0 * 2 ** 52);\n        const b32 = 2 ** 32;\n        const h32 = sign << 31 | exp + 1023 << 20 | frac1 / b32 & 0x0fffff;\n        const l32 = frac1 % b32;\n        this._bufferBuilder.append(0xcb);\n        this.pack_int32(h32);\n        this.pack_int32(l32);\n    }\n    pack_object(obj) {\n        const keys = Object.keys(obj);\n        const length = keys.length;\n        if (length <= 0x0f) this.pack_uint8(0x80 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xde);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xdf);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        const packNext = (index)=>{\n            if (index < keys.length) {\n                const prop = keys[index];\n                // eslint-disable-next-line no-prototype-builtins\n                if (obj.hasOwnProperty(prop)) {\n                    this.pack(prop);\n                    const res = this.pack(obj[prop]);\n                    if (res instanceof Promise) return res.then(()=>packNext(index + 1));\n                }\n                return packNext(index + 1);\n            }\n        };\n        return packNext(0);\n    }\n    pack_uint8(num) {\n        this._bufferBuilder.append(num);\n    }\n    pack_uint16(num) {\n        this._bufferBuilder.append(num >> 8);\n        this._bufferBuilder.append(num & 0xff);\n    }\n    pack_uint32(num) {\n        const n = num & 0xffffffff;\n        this._bufferBuilder.append((n & 0xff000000) >>> 24);\n        this._bufferBuilder.append((n & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((n & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(n & 0x000000ff);\n    }\n    pack_uint64(num) {\n        const high = num / 2 ** 32;\n        const low = num % 2 ** 32;\n        this._bufferBuilder.append((high & 0xff000000) >>> 24);\n        this._bufferBuilder.append((high & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((high & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(high & 0x000000ff);\n        this._bufferBuilder.append((low & 0xff000000) >>> 24);\n        this._bufferBuilder.append((low & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((low & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(low & 0x000000ff);\n    }\n    pack_int8(num) {\n        this._bufferBuilder.append(num & 0xff);\n    }\n    pack_int16(num) {\n        this._bufferBuilder.append((num & 0xff00) >> 8);\n        this._bufferBuilder.append(num & 0xff);\n    }\n    pack_int32(num) {\n        this._bufferBuilder.append(num >>> 24 & 0xff);\n        this._bufferBuilder.append((num & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((num & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(num & 0x000000ff);\n    }\n    pack_int64(num) {\n        const high = Math.floor(num / 2 ** 32);\n        const low = num % 2 ** 32;\n        this._bufferBuilder.append((high & 0xff000000) >>> 24);\n        this._bufferBuilder.append((high & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((high & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(high & 0x000000ff);\n        this._bufferBuilder.append((low & 0xff000000) >>> 24);\n        this._bufferBuilder.append((low & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((low & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(low & 0x000000ff);\n    }\n    constructor(){\n        this._bufferBuilder = new (0, $e8379818650e2442$export$93654d4f2d6cd524)();\n        this._textEncoder = new TextEncoder();\n    }\n}\n\n\nexport {$0cfd7828ad59115f$export$417857010dc9287f as unpack, $0cfd7828ad59115f$export$2a703dbb0cb35339 as pack, $0cfd7828ad59115f$export$b9ec4b114aa40074 as Packer};\n//# sourceMappingURL=binarypack.mjs.map\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseFloat(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n    'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator ||\n      !window.navigator.userAgent) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  // Prefer navigator.userAgentData.\n  if (navigator.userAgentData && navigator.userAgentData.brands) {\n    const chromium = navigator.userAgentData.brands.find((brand) => {\n      return brand.brand === 'Chromium';\n    });\n    if (chromium) {\n      return {browser: 'chrome', version: parseInt(chromium.version, 10)};\n    }\n  }\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = parseInt(extractVersion(navigator.userAgent,\n      /Firefox\\/(\\d+)\\./, 1));\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = parseInt(extractVersion(navigator.userAgent,\n      /Chrom(e|ium)\\/(\\d+)\\./, 2));\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = parseInt(extractVersion(navigator.userAgent,\n      /AppleWebKit\\/(\\d+)\\./, 1));\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n    // Only for internal usage.\n    result._safariVersion = extractVersion(navigator.userAgent,\n      /Version\\/(\\d+(\\.?\\d+))/, 1);\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n            .then(devices => {\n              devices = devices.filter(d => d.kind === 'videoinput');\n              let dev = devices.find(d => matches.some(match =>\n                d.label.toLowerCase().includes(match)));\n              if (!dev && devices.length && matches.includes('back')) {\n                dev = devices[devices.length - 1]; // more likely the back cam\n              }\n              if (dev) {\n                constraints.video.deviceId = face.exact\n                  ? {exact: dev.deviceId}\n                  : {ideal: dev.deviceId};\n              }\n              constraints.video = constraintsToChrome_(constraints.video);\n              logging('chrome: ' + JSON.stringify(constraints));\n              return func(constraints);\n            });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n    .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n        this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n        externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n        internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n        .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n    window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n    'localDescription', {\n      get() {\n        const description = origLocalDescription.get.apply(this);\n        if (description.type === '') {\n          return description;\n        }\n        return replaceInternalStreamId(this, description);\n      }\n    });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n          'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n      'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n      Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        // WebIDL input coercion and validation\n        let sendEncodings = arguments[1] && arguments[1].sendEncodings;\n        if (sendEncodings === undefined) {\n          sendEncodings = [];\n        }\n        sendEncodings = [...sendEncodings];\n        const shouldPerformCheck = sendEncodings.length > 0;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = sendEncodings;\n            sender.sendEncodings = sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateOffer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateAnswer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n        .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (server.urls === undefined && server.url) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio', {direction: 'recvonly'});\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video', {direction: 'recvonly'});\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substring(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' '),\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri +\n      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +\n      '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substring(7, sp), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')\n    .map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(codec => {\n    wildcardRtcpFb.forEach(fb=> {\n      const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n        return existingFeedback.type === fb.type &&\n          existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substring(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substring(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      for (const key in parsedCandidate) {\n        if (!(key in nativeCandidate)) {\n          Object.defineProperty(nativeCandidate, key,\n            {value: parsedCandidate[key]});\n        }\n      }\n\n      // Override serializer to not serialize the extra attributes.\n      nativeCandidate.toJSON = function toJSON() {\n        return {\n          candidate: nativeCandidate.candidate,\n          sdpMid: nativeCandidate.sdpMid,\n          sdpMLineIndex: nativeCandidate.sdpMLineIndex,\n          usernameFragment: nativeCandidate.usernameFragment,\n        };\n      };\n      return nativeCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimRTCIceCandidateRelayProtocol(window) {\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'relayProtocol' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      const parsedCandidate = SDPUtils.parseCandidate(e.candidate.candidate);\n      if (parsedCandidate.type === 'relay') {\n        // This is a libwebrtc-specific mapping of local type preference\n        // to relayProtocol.\n        e.candidate.relayProtocol = {\n          0: 'tls',\n          1: 'tcp',\n          2: 'udp',\n        }[parsedCandidate.priority >> 24];\n      }\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substring(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n          this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n          this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' &&\n      browserDetails._safariVersion >= 13.1) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n\n// Note: Make sure to call this ahead of APIs that modify\n// setLocalDescription.length\nexport function shimParameterlessSetLocalDescription(window, browserDetails) {\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      let desc = arguments[0] || {};\n      if (typeof desc !== 'object' || (desc.type && desc.sdp)) {\n        return nativeSetLocalDescription.apply(this, arguments);\n      }\n      // The remaining steps should technically happen when SLD comes off the\n      // RTCPeerConnection's operations chain (not ahead of going on it), but\n      // this is too difficult to shim. Instead, this shim only covers the\n      // common case where the operations chain is empty. This is imperfect, but\n      // should cover many cases. Rationale: Even if we can't reduce the glare\n      // window to zero on imperfect implementations, there's value in tapping\n      // into the perfect negotiation pattern that several browsers support.\n      desc = {type: desc.type, sdp: desc.sdp};\n      if (!desc.type) {\n        switch (this.signalingState) {\n          case 'stable':\n          case 'have-local-offer':\n          case 'have-remote-pranswer':\n            desc.type = 'offer';\n            break;\n          default:\n            desc.type = 'answer';\n            break;\n        }\n      }\n      if (desc.sdp || (desc.type !== 'offer' && desc.type !== 'answer')) {\n        return nativeSetLocalDescription.apply(this, [desc]);\n      }\n      const func = desc.type === 'offer' ? this.createOffer : this.createAnswer;\n      return func.apply(this)\n        .then(d => nativeSetLocalDescription.apply(this, [d]));\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n// Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\nimport * as sdp from 'sdp';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings,\n    // Expose sdp as a convenience. For production apps include directly.\n    sdp,\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","import {pack as $gCcbY$pack, unpack as $gCcbY$unpack} from \"peerjs-js-binarypack\";\nimport $gCcbY$webrtcadapter from \"webrtc-adapter\";\nimport {Encoder as $gCcbY$Encoder, decodeMultiStream as $gCcbY$decodeMultiStream} from \"@msgpack/msgpack\";\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nclass $fcbcc7538a6776d5$export$f1c5f4c9cb95390b {\n    constructor(){\n        this.chunkedMTU = 16300 // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n        ;\n        // Binary stuff\n        this._dataCount = 1;\n        this.chunk = (blob)=>{\n            const chunks = [];\n            const size = blob.byteLength;\n            const total = Math.ceil(size / this.chunkedMTU);\n            let index = 0;\n            let start = 0;\n            while(start < size){\n                const end = Math.min(size, start + this.chunkedMTU);\n                const b = blob.slice(start, end);\n                const chunk = {\n                    __peerData: this._dataCount,\n                    n: index,\n                    data: b,\n                    total: total\n                };\n                chunks.push(chunk);\n                start = end;\n                index++;\n            }\n            this._dataCount++;\n            return chunks;\n        };\n    }\n}\nfunction $fcbcc7538a6776d5$export$52c89ebcdc4f53f2(bufs) {\n    let size = 0;\n    for (const buf of bufs)size += buf.byteLength;\n    const result = new Uint8Array(size);\n    let offset = 0;\n    for (const buf of bufs){\n        result.set(buf, offset);\n        offset += buf.byteLength;\n    }\n    return result;\n}\n\n\n\n\nconst $fb63e766cfafaab9$var$webRTCAdapter = //@ts-ignore\n(0, $gCcbY$webrtcadapter).default || (0, $gCcbY$webrtcadapter);\nconst $fb63e766cfafaab9$export$25be9502477c137d = new class {\n    isWebRTCSupported() {\n        return typeof RTCPeerConnection !== \"undefined\";\n    }\n    isBrowserSupported() {\n        const browser = this.getBrowser();\n        const version = this.getVersion();\n        const validBrowser = this.supportedBrowsers.includes(browser);\n        if (!validBrowser) return false;\n        if (browser === \"chrome\") return version >= this.minChromeVersion;\n        if (browser === \"firefox\") return version >= this.minFirefoxVersion;\n        if (browser === \"safari\") return !this.isIOS && version >= this.minSafariVersion;\n        return false;\n    }\n    getBrowser() {\n        return $fb63e766cfafaab9$var$webRTCAdapter.browserDetails.browser;\n    }\n    getVersion() {\n        return $fb63e766cfafaab9$var$webRTCAdapter.browserDetails.version || 0;\n    }\n    isUnifiedPlanSupported() {\n        const browser = this.getBrowser();\n        const version = $fb63e766cfafaab9$var$webRTCAdapter.browserDetails.version || 0;\n        if (browser === \"chrome\" && version < this.minChromeVersion) return false;\n        if (browser === \"firefox\" && version >= this.minFirefoxVersion) return true;\n        if (!window.RTCRtpTransceiver || !(\"currentDirection\" in RTCRtpTransceiver.prototype)) return false;\n        let tempPc;\n        let supported = false;\n        try {\n            tempPc = new RTCPeerConnection();\n            tempPc.addTransceiver(\"audio\");\n            supported = true;\n        } catch (e) {} finally{\n            if (tempPc) tempPc.close();\n        }\n        return supported;\n    }\n    toString() {\n        return `Supports:\n    browser:${this.getBrowser()}\n    version:${this.getVersion()}\n    isIOS:${this.isIOS}\n    isWebRTCSupported:${this.isWebRTCSupported()}\n    isBrowserSupported:${this.isBrowserSupported()}\n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\n    }\n    constructor(){\n        this.isIOS = typeof navigator !== \"undefined\" ? [\n            \"iPad\",\n            \"iPhone\",\n            \"iPod\"\n        ].includes(navigator.platform) : false;\n        this.supportedBrowsers = [\n            \"firefox\",\n            \"chrome\",\n            \"safari\"\n        ];\n        this.minFirefoxVersion = 59;\n        this.minChromeVersion = 72;\n        this.minSafariVersion = 605;\n    }\n}();\n\n\nconst $9a84a32bf0bf36bb$export$f35f128fd59ea256 = (id)=>{\n    // Allow empty ids\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n};\n\n\nconst $0e5fd1585784c252$export$4e61f672936bec77 = ()=>Math.random().toString(36).slice(2);\n\n\nconst $4f4134156c446392$var$DEFAULT_CONFIG = {\n    iceServers: [\n        {\n            urls: \"stun:stun.l.google.com:19302\"\n        },\n        {\n            urls: [\n                \"turn:eu-0.turn.peerjs.com:3478\",\n                \"turn:us-0.turn.peerjs.com:3478\"\n            ],\n            username: \"peerjs\",\n            credential: \"peerjsp\"\n        }\n    ],\n    sdpSemantics: \"unified-plan\"\n};\nclass $4f4134156c446392$export$f8f26dd395d7e1bd extends (0, $fcbcc7538a6776d5$export$f1c5f4c9cb95390b) {\n    noop() {}\n    blobToArrayBuffer(blob, cb) {\n        const fr = new FileReader();\n        fr.onload = function(evt) {\n            if (evt.target) cb(evt.target.result);\n        };\n        fr.readAsArrayBuffer(blob);\n        return fr;\n    }\n    binaryStringToArrayBuffer(binary) {\n        const byteArray = new Uint8Array(binary.length);\n        for(let i = 0; i < binary.length; i++)byteArray[i] = binary.charCodeAt(i) & 0xff;\n        return byteArray.buffer;\n    }\n    isSecure() {\n        return location.protocol === \"https:\";\n    }\n    constructor(...args){\n        super(...args);\n        this.CLOUD_HOST = \"0.peerjs.com\";\n        this.CLOUD_PORT = 443;\n        // Browsers that need chunking:\n        this.chunkedBrowsers = {\n            Chrome: 1,\n            chrome: 1\n        };\n        // Returns browser-agnostic default config\n        this.defaultConfig = $4f4134156c446392$var$DEFAULT_CONFIG;\n        this.browser = (0, $fb63e766cfafaab9$export$25be9502477c137d).getBrowser();\n        this.browserVersion = (0, $fb63e766cfafaab9$export$25be9502477c137d).getVersion();\n        this.pack = $gCcbY$pack;\n        this.unpack = $gCcbY$unpack;\n        /**\n\t * A hash of WebRTC features mapped to booleans that correspond to whether the feature is supported by the current browser.\n\t *\n\t * :::caution\n\t * Only the properties documented here are guaranteed to be present on `util.supports`\n\t * :::\n\t */ this.supports = function() {\n            const supported = {\n                browser: (0, $fb63e766cfafaab9$export$25be9502477c137d).isBrowserSupported(),\n                webRTC: (0, $fb63e766cfafaab9$export$25be9502477c137d).isWebRTCSupported(),\n                audioVideo: false,\n                data: false,\n                binaryBlob: false,\n                reliable: false\n            };\n            if (!supported.webRTC) return supported;\n            let pc;\n            try {\n                pc = new RTCPeerConnection($4f4134156c446392$var$DEFAULT_CONFIG);\n                supported.audioVideo = true;\n                let dc;\n                try {\n                    dc = pc.createDataChannel(\"_PEERJSTEST\", {\n                        ordered: true\n                    });\n                    supported.data = true;\n                    supported.reliable = !!dc.ordered;\n                    // Binary test\n                    try {\n                        dc.binaryType = \"blob\";\n                        supported.binaryBlob = !(0, $fb63e766cfafaab9$export$25be9502477c137d).isIOS;\n                    } catch (e) {}\n                } catch (e) {} finally{\n                    if (dc) dc.close();\n                }\n            } catch (e) {} finally{\n                if (pc) pc.close();\n            }\n            return supported;\n        }();\n        // Ensure alphanumeric ids\n        this.validateId = (0, $9a84a32bf0bf36bb$export$f35f128fd59ea256);\n        this.randomToken = (0, $0e5fd1585784c252$export$4e61f672936bec77);\n    }\n}\nconst $4f4134156c446392$export$7debb50ef11d5e0b = new $4f4134156c446392$export$f8f26dd395d7e1bd();\n\n\n\nconst $257947e92926277a$var$LOG_PREFIX = \"PeerJS: \";\nvar $257947e92926277a$export$243e62d78d3b544d;\n(function(LogLevel) {\n    /**\n\t * Prints no logs.\n\t */ LogLevel[LogLevel[\"Disabled\"] = 0] = \"Disabled\";\n    /**\n\t * Prints only errors.\n\t */ LogLevel[LogLevel[\"Errors\"] = 1] = \"Errors\";\n    /**\n\t * Prints errors and warnings.\n\t */ LogLevel[LogLevel[\"Warnings\"] = 2] = \"Warnings\";\n    /**\n\t * Prints all logs.\n\t */ LogLevel[LogLevel[\"All\"] = 3] = \"All\";\n})($257947e92926277a$export$243e62d78d3b544d || ($257947e92926277a$export$243e62d78d3b544d = {}));\nclass $257947e92926277a$var$Logger {\n    get logLevel() {\n        return this._logLevel;\n    }\n    set logLevel(logLevel) {\n        this._logLevel = logLevel;\n    }\n    log(...args) {\n        if (this._logLevel >= 3) this._print(3, ...args);\n    }\n    warn(...args) {\n        if (this._logLevel >= 2) this._print(2, ...args);\n    }\n    error(...args) {\n        if (this._logLevel >= 1) this._print(1, ...args);\n    }\n    setLogFunction(fn) {\n        this._print = fn;\n    }\n    _print(logLevel, ...rest) {\n        const copy = [\n            $257947e92926277a$var$LOG_PREFIX,\n            ...rest\n        ];\n        for(const i in copy)if (copy[i] instanceof Error) copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n        if (logLevel >= 3) console.log(...copy);\n        else if (logLevel >= 2) console.warn(\"WARNING\", ...copy);\n        else if (logLevel >= 1) console.error(\"ERROR\", ...copy);\n    }\n    constructor(){\n        this._logLevel = 0;\n    }\n}\nvar $257947e92926277a$export$2e2bcd8739ae039 = new $257947e92926277a$var$Logger();\n\n\nvar $c4dcfd1d1ea86647$exports = {};\n\"use strict\";\nvar $c4dcfd1d1ea86647$var$has = Object.prototype.hasOwnProperty, $c4dcfd1d1ea86647$var$prefix = \"~\";\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */ function $c4dcfd1d1ea86647$var$Events() {}\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n    $c4dcfd1d1ea86647$var$Events.prototype = Object.create(null);\n    //\n    // This hack is needed because the `__proto__` property is still inherited in\n    // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n    //\n    if (!new $c4dcfd1d1ea86647$var$Events().__proto__) $c4dcfd1d1ea86647$var$prefix = false;\n}\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */ function $c4dcfd1d1ea86647$var$EE(fn, context, once) {\n    this.fn = fn;\n    this.context = context;\n    this.once = once || false;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */ function $c4dcfd1d1ea86647$var$addListener(emitter, event, fn, context, once) {\n    if (typeof fn !== \"function\") throw new TypeError(\"The listener must be a function\");\n    var listener = new $c4dcfd1d1ea86647$var$EE(fn, context || emitter, once), evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event;\n    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n    else emitter._events[evt] = [\n        emitter._events[evt],\n        listener\n    ];\n    return emitter;\n}\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */ function $c4dcfd1d1ea86647$var$clearEvent(emitter, evt) {\n    if (--emitter._eventsCount === 0) emitter._events = new $c4dcfd1d1ea86647$var$Events();\n    else delete emitter._events[evt];\n}\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */ function $c4dcfd1d1ea86647$var$EventEmitter() {\n    this._events = new $c4dcfd1d1ea86647$var$Events();\n    this._eventsCount = 0;\n}\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.eventNames = function eventNames() {\n    var names = [], events, name;\n    if (this._eventsCount === 0) return names;\n    for(name in events = this._events)if ($c4dcfd1d1ea86647$var$has.call(events, name)) names.push($c4dcfd1d1ea86647$var$prefix ? name.slice(1) : name);\n    if (Object.getOwnPropertySymbols) return names.concat(Object.getOwnPropertySymbols(events));\n    return names;\n};\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.listeners = function listeners(event) {\n    var evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event, handlers = this._events[evt];\n    if (!handlers) return [];\n    if (handlers.fn) return [\n        handlers.fn\n    ];\n    for(var i = 0, l = handlers.length, ee = new Array(l); i < l; i++)ee[i] = handlers[i].fn;\n    return ee;\n};\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.listenerCount = function listenerCount(event) {\n    var evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event, listeners = this._events[evt];\n    if (!listeners) return 0;\n    if (listeners.fn) return 1;\n    return listeners.length;\n};\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n    var evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event;\n    if (!this._events[evt]) return false;\n    var listeners = this._events[evt], len = arguments.length, args, i;\n    if (listeners.fn) {\n        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n        switch(len){\n            case 1:\n                return listeners.fn.call(listeners.context), true;\n            case 2:\n                return listeners.fn.call(listeners.context, a1), true;\n            case 3:\n                return listeners.fn.call(listeners.context, a1, a2), true;\n            case 4:\n                return listeners.fn.call(listeners.context, a1, a2, a3), true;\n            case 5:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n            case 6:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n        }\n        for(i = 1, args = new Array(len - 1); i < len; i++)args[i - 1] = arguments[i];\n        listeners.fn.apply(listeners.context, args);\n    } else {\n        var length = listeners.length, j;\n        for(i = 0; i < length; i++){\n            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n            switch(len){\n                case 1:\n                    listeners[i].fn.call(listeners[i].context);\n                    break;\n                case 2:\n                    listeners[i].fn.call(listeners[i].context, a1);\n                    break;\n                case 3:\n                    listeners[i].fn.call(listeners[i].context, a1, a2);\n                    break;\n                case 4:\n                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);\n                    break;\n                default:\n                    if (!args) for(j = 1, args = new Array(len - 1); j < len; j++)args[j - 1] = arguments[j];\n                    listeners[i].fn.apply(listeners[i].context, args);\n            }\n        }\n    }\n    return true;\n};\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.on = function on(event, fn, context) {\n    return $c4dcfd1d1ea86647$var$addListener(this, event, fn, context, false);\n};\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.once = function once(event, fn, context) {\n    return $c4dcfd1d1ea86647$var$addListener(this, event, fn, context, true);\n};\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n    var evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event;\n    if (!this._events[evt]) return this;\n    if (!fn) {\n        $c4dcfd1d1ea86647$var$clearEvent(this, evt);\n        return this;\n    }\n    var listeners = this._events[evt];\n    if (listeners.fn) {\n        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) $c4dcfd1d1ea86647$var$clearEvent(this, evt);\n    } else {\n        for(var i = 0, events = [], length = listeners.length; i < length; i++)if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) events.push(listeners[i]);\n        //\n        // Reset the array, or remove it completely if we have no more listeners.\n        //\n        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n        else $c4dcfd1d1ea86647$var$clearEvent(this, evt);\n    }\n    return this;\n};\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n    var evt;\n    if (event) {\n        evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event;\n        if (this._events[evt]) $c4dcfd1d1ea86647$var$clearEvent(this, evt);\n    } else {\n        this._events = new $c4dcfd1d1ea86647$var$Events();\n        this._eventsCount = 0;\n    }\n    return this;\n};\n//\n// Alias methods names because people roll like that.\n//\n$c4dcfd1d1ea86647$var$EventEmitter.prototype.off = $c4dcfd1d1ea86647$var$EventEmitter.prototype.removeListener;\n$c4dcfd1d1ea86647$var$EventEmitter.prototype.addListener = $c4dcfd1d1ea86647$var$EventEmitter.prototype.on;\n//\n// Expose the prefix.\n//\n$c4dcfd1d1ea86647$var$EventEmitter.prefixed = $c4dcfd1d1ea86647$var$prefix;\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\n$c4dcfd1d1ea86647$var$EventEmitter.EventEmitter = $c4dcfd1d1ea86647$var$EventEmitter;\n$c4dcfd1d1ea86647$exports = $c4dcfd1d1ea86647$var$EventEmitter;\n\n\n\nvar $78455e22dea96b8c$exports = {};\n\n$parcel$export($78455e22dea96b8c$exports, \"ConnectionType\", () => $78455e22dea96b8c$export$3157d57b4135e3bc);\n$parcel$export($78455e22dea96b8c$exports, \"PeerErrorType\", () => $78455e22dea96b8c$export$9547aaa2e39030ff);\n$parcel$export($78455e22dea96b8c$exports, \"BaseConnectionErrorType\", () => $78455e22dea96b8c$export$7974935686149686);\n$parcel$export($78455e22dea96b8c$exports, \"DataConnectionErrorType\", () => $78455e22dea96b8c$export$49ae800c114df41d);\n$parcel$export($78455e22dea96b8c$exports, \"SerializationType\", () => $78455e22dea96b8c$export$89f507cf986a947);\n$parcel$export($78455e22dea96b8c$exports, \"SocketEventType\", () => $78455e22dea96b8c$export$3b5c4a4b6354f023);\n$parcel$export($78455e22dea96b8c$exports, \"ServerMessageType\", () => $78455e22dea96b8c$export$adb4a1754da6f10d);\nvar $78455e22dea96b8c$export$3157d57b4135e3bc;\n(function(ConnectionType) {\n    ConnectionType[\"Data\"] = \"data\";\n    ConnectionType[\"Media\"] = \"media\";\n})($78455e22dea96b8c$export$3157d57b4135e3bc || ($78455e22dea96b8c$export$3157d57b4135e3bc = {}));\nvar $78455e22dea96b8c$export$9547aaa2e39030ff;\n(function(PeerErrorType) {\n    /**\n\t * The client's browser does not support some or all WebRTC features that you are trying to use.\n\t */ PeerErrorType[\"BrowserIncompatible\"] = \"browser-incompatible\";\n    /**\n\t * You've already disconnected this peer from the server and can no longer make any new connections on it.\n\t */ PeerErrorType[\"Disconnected\"] = \"disconnected\";\n    /**\n\t * The ID passed into the Peer constructor contains illegal characters.\n\t */ PeerErrorType[\"InvalidID\"] = \"invalid-id\";\n    /**\n\t * The API key passed into the Peer constructor contains illegal characters or is not in the system (cloud server only).\n\t */ PeerErrorType[\"InvalidKey\"] = \"invalid-key\";\n    /**\n\t * Lost or cannot establish a connection to the signalling server.\n\t */ PeerErrorType[\"Network\"] = \"network\";\n    /**\n\t * The peer you're trying to connect to does not exist.\n\t */ PeerErrorType[\"PeerUnavailable\"] = \"peer-unavailable\";\n    /**\n\t * PeerJS is being used securely, but the cloud server does not support SSL. Use a custom PeerServer.\n\t */ PeerErrorType[\"SslUnavailable\"] = \"ssl-unavailable\";\n    /**\n\t * Unable to reach the server.\n\t */ PeerErrorType[\"ServerError\"] = \"server-error\";\n    /**\n\t * An error from the underlying socket.\n\t */ PeerErrorType[\"SocketError\"] = \"socket-error\";\n    /**\n\t * The underlying socket closed unexpectedly.\n\t */ PeerErrorType[\"SocketClosed\"] = \"socket-closed\";\n    /**\n\t * The ID passed into the Peer constructor is already taken.\n\t *\n\t * :::caution\n\t * This error is not fatal if your peer has open peer-to-peer connections.\n\t * This can happen if you attempt to {@apilink Peer.reconnect} a peer that has been disconnected from the server,\n\t * but its old ID has now been taken.\n\t * :::\n\t */ PeerErrorType[\"UnavailableID\"] = \"unavailable-id\";\n    /**\n\t * Native WebRTC errors.\n\t */ PeerErrorType[\"WebRTC\"] = \"webrtc\";\n})($78455e22dea96b8c$export$9547aaa2e39030ff || ($78455e22dea96b8c$export$9547aaa2e39030ff = {}));\nvar $78455e22dea96b8c$export$7974935686149686;\n(function(BaseConnectionErrorType) {\n    BaseConnectionErrorType[\"NegotiationFailed\"] = \"negotiation-failed\";\n    BaseConnectionErrorType[\"ConnectionClosed\"] = \"connection-closed\";\n})($78455e22dea96b8c$export$7974935686149686 || ($78455e22dea96b8c$export$7974935686149686 = {}));\nvar $78455e22dea96b8c$export$49ae800c114df41d;\n(function(DataConnectionErrorType) {\n    DataConnectionErrorType[\"NotOpenYet\"] = \"not-open-yet\";\n    DataConnectionErrorType[\"MessageToBig\"] = \"message-too-big\";\n})($78455e22dea96b8c$export$49ae800c114df41d || ($78455e22dea96b8c$export$49ae800c114df41d = {}));\nvar $78455e22dea96b8c$export$89f507cf986a947;\n(function(SerializationType) {\n    SerializationType[\"Binary\"] = \"binary\";\n    SerializationType[\"BinaryUTF8\"] = \"binary-utf8\";\n    SerializationType[\"JSON\"] = \"json\";\n    SerializationType[\"None\"] = \"raw\";\n})($78455e22dea96b8c$export$89f507cf986a947 || ($78455e22dea96b8c$export$89f507cf986a947 = {}));\nvar $78455e22dea96b8c$export$3b5c4a4b6354f023;\n(function(SocketEventType) {\n    SocketEventType[\"Message\"] = \"message\";\n    SocketEventType[\"Disconnected\"] = \"disconnected\";\n    SocketEventType[\"Error\"] = \"error\";\n    SocketEventType[\"Close\"] = \"close\";\n})($78455e22dea96b8c$export$3b5c4a4b6354f023 || ($78455e22dea96b8c$export$3b5c4a4b6354f023 = {}));\nvar $78455e22dea96b8c$export$adb4a1754da6f10d;\n(function(ServerMessageType) {\n    ServerMessageType[\"Heartbeat\"] = \"HEARTBEAT\";\n    ServerMessageType[\"Candidate\"] = \"CANDIDATE\";\n    ServerMessageType[\"Offer\"] = \"OFFER\";\n    ServerMessageType[\"Answer\"] = \"ANSWER\";\n    ServerMessageType[\"Open\"] = \"OPEN\";\n    ServerMessageType[\"Error\"] = \"ERROR\";\n    ServerMessageType[\"IdTaken\"] = \"ID-TAKEN\";\n    ServerMessageType[\"InvalidKey\"] = \"INVALID-KEY\";\n    ServerMessageType[\"Leave\"] = \"LEAVE\";\n    ServerMessageType[\"Expire\"] = \"EXPIRE\";\n})($78455e22dea96b8c$export$adb4a1754da6f10d || ($78455e22dea96b8c$export$adb4a1754da6f10d = {}));\n\n\nvar $f5f881ec4575f1fc$exports = {};\n$f5f881ec4575f1fc$exports = JSON.parse('{\"name\":\"peerjs\",\"version\":\"1.5.4\",\"keywords\":[\"peerjs\",\"webrtc\",\"p2p\",\"rtc\"],\"description\":\"PeerJS client\",\"homepage\":\"https://peerjs.com\",\"bugs\":{\"url\":\"https://github.com/peers/peerjs/issues\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/peers/peerjs\"},\"license\":\"MIT\",\"contributors\":[\"Michelle Bu <michelle@michellebu.com>\",\"afrokick <devbyru@gmail.com>\",\"ericz <really.ez@gmail.com>\",\"Jairo <kidandcat@gmail.com>\",\"Jonas Gloning <34194370+jonasgloning@users.noreply.github.com>\",\"Jairo Caro-Accino Viciana <jairo@galax.be>\",\"Carlos Caballero <carlos.caballero.gonzalez@gmail.com>\",\"hc <hheennrryy@gmail.com>\",\"Muhammad Asif <capripio@gmail.com>\",\"PrashoonB <prashoonbhattacharjee@gmail.com>\",\"Harsh Bardhan Mishra <47351025+HarshCasper@users.noreply.github.com>\",\"akotynski <aleksanderkotbury@gmail.com>\",\"lmb <i@lmb.io>\",\"Jairooo <jairocaro@msn.com>\",\"Moritz St\\xfcckler <moritz.stueckler@gmail.com>\",\"Simon <crydotsnakegithub@gmail.com>\",\"Denis Lukov <denismassters@gmail.com>\",\"Philipp Hancke <fippo@andyet.net>\",\"Hans Oksendahl <hansoksendahl@gmail.com>\",\"Jess <jessachandler@gmail.com>\",\"khankuan <khankuan@gmail.com>\",\"DUODVK <kurmanov.work@gmail.com>\",\"XiZhao <kwang1imsa@gmail.com>\",\"Matthias Lohr <matthias@lohr.me>\",\"=frank tree <=frnktrb@googlemail.com>\",\"Andre Eckardt <aeckardt@outlook.com>\",\"Chris Cowan <agentme49@gmail.com>\",\"Alex Chuev <alex@chuev.com>\",\"alxnull <alxnull@e.mail.de>\",\"Yemel Jardi <angel.jardi@gmail.com>\",\"Ben Parnell <benjaminparnell.94@gmail.com>\",\"Benny Lichtner <bennlich@gmail.com>\",\"fresheneesz <bitetrudpublic@gmail.com>\",\"bob.barstead@exaptive.com <bob.barstead@exaptive.com>\",\"chandika <chandika@gmail.com>\",\"emersion <contact@emersion.fr>\",\"Christopher Van <cvan@users.noreply.github.com>\",\"eddieherm <edhermoso@gmail.com>\",\"Eduardo Pinho <enet4mikeenet@gmail.com>\",\"Evandro Zanatta <ezanatta@tray.net.br>\",\"Gardner Bickford <gardner@users.noreply.github.com>\",\"Gian Luca <gianluca.cecchi@cynny.com>\",\"PatrickJS <github@gdi2290.com>\",\"jonnyf <github@jonathanfoss.co.uk>\",\"Hizkia Felix <hizkifw@gmail.com>\",\"Hristo Oskov <hristo.oskov@gmail.com>\",\"Isaac Madwed <i.madwed@gmail.com>\",\"Ilya Konanykhin <ilya.konanykhin@gmail.com>\",\"jasonbarry <jasbarry@me.com>\",\"Jonathan Burke <jonathan.burke.1311@googlemail.com>\",\"Josh Hamit <josh.hamit@gmail.com>\",\"Jordan Austin <jrax86@gmail.com>\",\"Joel Wetzell <jwetzell@yahoo.com>\",\"xizhao <kevin.wang@cloudera.com>\",\"Alberto Torres <kungfoobar@gmail.com>\",\"Jonathan Mayol <mayoljonathan@gmail.com>\",\"Jefferson Felix <me@jsfelix.dev>\",\"Rolf Erik Lekang <me@rolflekang.com>\",\"Kevin Mai-Husan Chia <mhchia@users.noreply.github.com>\",\"Pepijn de Vos <pepijndevos@gmail.com>\",\"JooYoung <qkdlql@naver.com>\",\"Tobias Speicher <rootcommander@gmail.com>\",\"Steve Blaurock <sblaurock@gmail.com>\",\"Kyrylo Shegeda <shegeda@ualberta.ca>\",\"Diwank Singh Tomer <singh@diwank.name>\",\"So\\u0308ren Balko <Soeren.Balko@gmail.com>\",\"Arpit Solanki <solankiarpit1997@gmail.com>\",\"Yuki Ito <yuki@gnnk.net>\",\"Artur Zayats <zag2art@gmail.com>\"],\"funding\":{\"type\":\"opencollective\",\"url\":\"https://opencollective.com/peer\"},\"collective\":{\"type\":\"opencollective\",\"url\":\"https://opencollective.com/peer\"},\"files\":[\"dist/*\"],\"sideEffects\":[\"lib/global.ts\",\"lib/supports.ts\"],\"main\":\"dist/bundler.cjs\",\"module\":\"dist/bundler.mjs\",\"browser-minified\":\"dist/peerjs.min.js\",\"browser-unminified\":\"dist/peerjs.js\",\"browser-minified-msgpack\":\"dist/serializer.msgpack.mjs\",\"types\":\"dist/types.d.ts\",\"engines\":{\"node\":\">= 14\"},\"targets\":{\"types\":{\"source\":\"lib/exports.ts\"},\"main\":{\"source\":\"lib/exports.ts\",\"sourceMap\":{\"inlineSources\":true}},\"module\":{\"source\":\"lib/exports.ts\",\"includeNodeModules\":[\"eventemitter3\"],\"sourceMap\":{\"inlineSources\":true}},\"browser-minified\":{\"context\":\"browser\",\"outputFormat\":\"global\",\"optimize\":true,\"engines\":{\"browsers\":\"chrome >= 83, edge >= 83, firefox >= 80, safari >= 15\"},\"source\":\"lib/global.ts\"},\"browser-unminified\":{\"context\":\"browser\",\"outputFormat\":\"global\",\"optimize\":false,\"engines\":{\"browsers\":\"chrome >= 83, edge >= 83, firefox >= 80, safari >= 15\"},\"source\":\"lib/global.ts\"},\"browser-minified-msgpack\":{\"context\":\"browser\",\"outputFormat\":\"esmodule\",\"isLibrary\":true,\"optimize\":true,\"engines\":{\"browsers\":\"chrome >= 83, edge >= 83, firefox >= 102, safari >= 15\"},\"source\":\"lib/dataconnection/StreamConnection/MsgPack.ts\"}},\"scripts\":{\"contributors\":\"git-authors-cli --print=false && prettier --write package.json && git add package.json package-lock.json && git commit -m \\\\\"chore(contributors): update and sort contributors list\\\\\"\",\"check\":\"tsc --noEmit && tsc -p e2e/tsconfig.json --noEmit\",\"watch\":\"parcel watch\",\"build\":\"rm -rf dist && parcel build\",\"prepublishOnly\":\"npm run build\",\"test\":\"jest\",\"test:watch\":\"jest --watch\",\"coverage\":\"jest --coverage --collectCoverageFrom=\\\\\"./lib/**\\\\\"\",\"format\":\"prettier --write .\",\"format:check\":\"prettier --check .\",\"semantic-release\":\"semantic-release\",\"e2e\":\"wdio run e2e/wdio.local.conf.ts\",\"e2e:bstack\":\"wdio run e2e/wdio.bstack.conf.ts\"},\"devDependencies\":{\"@parcel/config-default\":\"^2.9.3\",\"@parcel/packager-ts\":\"^2.9.3\",\"@parcel/transformer-typescript-tsc\":\"^2.9.3\",\"@parcel/transformer-typescript-types\":\"^2.9.3\",\"@semantic-release/changelog\":\"^6.0.1\",\"@semantic-release/git\":\"^10.0.1\",\"@swc/core\":\"^1.3.27\",\"@swc/jest\":\"^0.2.24\",\"@types/jasmine\":\"^4.3.4\",\"@wdio/browserstack-service\":\"^8.11.2\",\"@wdio/cli\":\"^8.11.2\",\"@wdio/globals\":\"^8.11.2\",\"@wdio/jasmine-framework\":\"^8.11.2\",\"@wdio/local-runner\":\"^8.11.2\",\"@wdio/spec-reporter\":\"^8.11.2\",\"@wdio/types\":\"^8.10.4\",\"http-server\":\"^14.1.1\",\"jest\":\"^29.3.1\",\"jest-environment-jsdom\":\"^29.3.1\",\"mock-socket\":\"^9.0.0\",\"parcel\":\"^2.9.3\",\"prettier\":\"^3.0.0\",\"semantic-release\":\"^21.0.0\",\"ts-node\":\"^10.9.1\",\"typescript\":\"^5.0.0\",\"wdio-geckodriver-service\":\"^5.0.1\"},\"dependencies\":{\"@msgpack/msgpack\":\"^2.8.0\",\"eventemitter3\":\"^4.0.7\",\"peerjs-js-binarypack\":\"^2.1.0\",\"webrtc-adapter\":\"^9.0.0\"},\"alias\":{\"process\":false,\"buffer\":false}}');\n\n\nclass $8f5bfa60836d261d$export$4798917dbf149b79 extends (0, $c4dcfd1d1ea86647$exports.EventEmitter) {\n    constructor(secure, host, port, path, key, pingInterval = 5000){\n        super();\n        this.pingInterval = pingInterval;\n        this._disconnected = true;\n        this._messagesQueue = [];\n        const wsProtocol = secure ? \"wss://\" : \"ws://\";\n        this._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n    }\n    start(id, token) {\n        this._id = id;\n        const wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n        if (!!this._socket || !this._disconnected) return;\n        this._socket = new WebSocket(wsUrl + \"&version=\" + (0, $f5f881ec4575f1fc$exports.version));\n        this._disconnected = false;\n        this._socket.onmessage = (event)=>{\n            let data;\n            try {\n                data = JSON.parse(event.data);\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Server message received:\", data);\n            } catch (e) {\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Invalid server message\", event.data);\n                return;\n            }\n            this.emit((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Message, data);\n        };\n        this._socket.onclose = (event)=>{\n            if (this._disconnected) return;\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Socket closed.\", event);\n            this._cleanup();\n            this._disconnected = true;\n            this.emit((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Disconnected);\n        };\n        // Take care of the queue of connections if necessary and make sure Peer knows\n        // socket is open.\n        this._socket.onopen = ()=>{\n            if (this._disconnected) return;\n            this._sendQueuedMessages();\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Socket open\");\n            this._scheduleHeartbeat();\n        };\n    }\n    _scheduleHeartbeat() {\n        this._wsPingTimer = setTimeout(()=>{\n            this._sendHeartbeat();\n        }, this.pingInterval);\n    }\n    _sendHeartbeat() {\n        if (!this._wsOpen()) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Cannot send heartbeat, because socket closed`);\n            return;\n        }\n        const message = JSON.stringify({\n            type: (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Heartbeat\n        });\n        this._socket.send(message);\n        this._scheduleHeartbeat();\n    }\n    /** Is the websocket currently open? */ _wsOpen() {\n        return !!this._socket && this._socket.readyState === 1;\n    }\n    /** Send queued messages. */ _sendQueuedMessages() {\n        //Create copy of queue and clear it,\n        //because send method push the message back to queue if smth will go wrong\n        const copiedQueue = [\n            ...this._messagesQueue\n        ];\n        this._messagesQueue = [];\n        for (const message of copiedQueue)this.send(message);\n    }\n    /** Exposed send for DC & Peer. */ send(data) {\n        if (this._disconnected) return;\n        // If we didn't get an ID yet, we can't yet send anything so we should queue\n        // up these messages.\n        if (!this._id) {\n            this._messagesQueue.push(data);\n            return;\n        }\n        if (!data.type) {\n            this.emit((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Error, \"Invalid message\");\n            return;\n        }\n        if (!this._wsOpen()) return;\n        const message = JSON.stringify(data);\n        this._socket.send(message);\n    }\n    close() {\n        if (this._disconnected) return;\n        this._cleanup();\n        this._disconnected = true;\n    }\n    _cleanup() {\n        if (this._socket) {\n            this._socket.onopen = this._socket.onmessage = this._socket.onclose = null;\n            this._socket.close();\n            this._socket = undefined;\n        }\n        clearTimeout(this._wsPingTimer);\n    }\n}\n\n\n\n\n\n\nclass $b82fb8fc0514bfc1$export$89e6bb5ad64bf4a {\n    constructor(connection){\n        this.connection = connection;\n    }\n    /** Returns a PeerConnection object set up correctly (for data, media). */ startConnection(options) {\n        const peerConnection = this._startPeerConnection();\n        // Set the connection's PC.\n        this.connection.peerConnection = peerConnection;\n        if (this.connection.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Media && options._stream) this._addTracksToConnection(options._stream, peerConnection);\n        // What do we need to do now?\n        if (options.originator) {\n            const dataConnection = this.connection;\n            const config = {\n                ordered: !!options.reliable\n            };\n            const dataChannel = peerConnection.createDataChannel(dataConnection.label, config);\n            dataConnection._initializeDataChannel(dataChannel);\n            this._makeOffer();\n        } else this.handleSDP(\"OFFER\", options.sdp);\n    }\n    /** Start a PC. */ _startPeerConnection() {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Creating RTCPeerConnection.\");\n        const peerConnection = new RTCPeerConnection(this.connection.provider.options.config);\n        this._setupListeners(peerConnection);\n        return peerConnection;\n    }\n    /** Set up various WebRTC listeners. */ _setupListeners(peerConnection) {\n        const peerId = this.connection.peer;\n        const connectionId = this.connection.connectionId;\n        const connectionType = this.connection.type;\n        const provider = this.connection.provider;\n        // ICE CANDIDATES.\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Listening for ICE candidates.\");\n        peerConnection.onicecandidate = (evt)=>{\n            if (!evt.candidate || !evt.candidate.candidate) return;\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n            provider.socket.send({\n                type: (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Candidate,\n                payload: {\n                    candidate: evt.candidate,\n                    type: connectionType,\n                    connectionId: connectionId\n                },\n                dst: peerId\n            });\n        };\n        peerConnection.oniceconnectionstatechange = ()=>{\n            switch(peerConnection.iceConnectionState){\n                case \"failed\":\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"iceConnectionState is failed, closing connections to \" + peerId);\n                    this.connection.emitError((0, $78455e22dea96b8c$export$7974935686149686).NegotiationFailed, \"Negotiation of connection to \" + peerId + \" failed.\");\n                    this.connection.close();\n                    break;\n                case \"closed\":\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"iceConnectionState is closed, closing connections to \" + peerId);\n                    this.connection.emitError((0, $78455e22dea96b8c$export$7974935686149686).ConnectionClosed, \"Connection to \" + peerId + \" closed.\");\n                    this.connection.close();\n                    break;\n                case \"disconnected\":\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"iceConnectionState changed to disconnected on the connection with \" + peerId);\n                    break;\n                case \"completed\":\n                    peerConnection.onicecandidate = ()=>{};\n                    break;\n            }\n            this.connection.emit(\"iceStateChanged\", peerConnection.iceConnectionState);\n        };\n        // DATACONNECTION.\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Listening for data channel\");\n        // Fired between offer and answer, so options should already be saved\n        // in the options hash.\n        peerConnection.ondatachannel = (evt)=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Received data channel\");\n            const dataChannel = evt.channel;\n            const connection = provider.getConnection(peerId, connectionId);\n            connection._initializeDataChannel(dataChannel);\n        };\n        // MEDIACONNECTION.\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Listening for remote stream\");\n        peerConnection.ontrack = (evt)=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Received remote stream\");\n            const stream = evt.streams[0];\n            const connection = provider.getConnection(peerId, connectionId);\n            if (connection.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Media) {\n                const mediaConnection = connection;\n                this._addStreamToMediaConnection(stream, mediaConnection);\n            }\n        };\n    }\n    cleanup() {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n        const peerConnection = this.connection.peerConnection;\n        if (!peerConnection) return;\n        this.connection.peerConnection = null;\n        //unsubscribe from all PeerConnection's events\n        peerConnection.onicecandidate = peerConnection.oniceconnectionstatechange = peerConnection.ondatachannel = peerConnection.ontrack = ()=>{};\n        const peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n        let dataChannelNotClosed = false;\n        const dataChannel = this.connection.dataChannel;\n        if (dataChannel) dataChannelNotClosed = !!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n        if (peerConnectionNotClosed || dataChannelNotClosed) peerConnection.close();\n    }\n    async _makeOffer() {\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n        try {\n            const offer = await peerConnection.createOffer(this.connection.options.constraints);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Created offer.\");\n            if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === \"function\") offer.sdp = this.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n            try {\n                await peerConnection.setLocalDescription(offer);\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Set localDescription:\", offer, `for:${this.connection.peer}`);\n                let payload = {\n                    sdp: offer,\n                    type: this.connection.type,\n                    connectionId: this.connection.connectionId,\n                    metadata: this.connection.metadata\n                };\n                if (this.connection.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Data) {\n                    const dataConnection = this.connection;\n                    payload = {\n                        ...payload,\n                        label: dataConnection.label,\n                        reliable: dataConnection.reliable,\n                        serialization: dataConnection.serialization\n                    };\n                }\n                provider.socket.send({\n                    type: (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Offer,\n                    payload: payload,\n                    dst: this.connection.peer\n                });\n            } catch (err) {\n                // TODO: investigate why _makeOffer is being called from the answer\n                if (err != \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\") {\n                    provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err);\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to setLocalDescription, \", err);\n                }\n            }\n        } catch (err_1) {\n            provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err_1);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to createOffer, \", err_1);\n        }\n    }\n    async _makeAnswer() {\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n        try {\n            const answer = await peerConnection.createAnswer();\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Created answer.\");\n            if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === \"function\") answer.sdp = this.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n            try {\n                await peerConnection.setLocalDescription(answer);\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Set localDescription:`, answer, `for:${this.connection.peer}`);\n                provider.socket.send({\n                    type: (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Answer,\n                    payload: {\n                        sdp: answer,\n                        type: this.connection.type,\n                        connectionId: this.connection.connectionId\n                    },\n                    dst: this.connection.peer\n                });\n            } catch (err) {\n                provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err);\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to setLocalDescription, \", err);\n            }\n        } catch (err_1) {\n            provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err_1);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to create answer, \", err_1);\n        }\n    }\n    /** Handle an SDP. */ async handleSDP(type, sdp) {\n        sdp = new RTCSessionDescription(sdp);\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Setting remote description\", sdp);\n        const self = this;\n        try {\n            await peerConnection.setRemoteDescription(sdp);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n            if (type === \"OFFER\") await self._makeAnswer();\n        } catch (err) {\n            provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to setRemoteDescription, \", err);\n        }\n    }\n    /** Handle a candidate. */ async handleCandidate(ice) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`handleCandidate:`, ice);\n        try {\n            await this.connection.peerConnection.addIceCandidate(ice);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Added ICE candidate for:${this.connection.peer}`);\n        } catch (err) {\n            this.connection.provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to handleCandidate, \", err);\n        }\n    }\n    _addTracksToConnection(stream, peerConnection) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`add tracks from stream ${stream.id} to peer connection`);\n        if (!peerConnection.addTrack) return (0, $257947e92926277a$export$2e2bcd8739ae039).error(`Your browser does't support RTCPeerConnection#addTrack. Ignored.`);\n        stream.getTracks().forEach((track)=>{\n            peerConnection.addTrack(track, stream);\n        });\n    }\n    _addStreamToMediaConnection(stream, mediaConnection) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`add stream ${stream.id} to media connection ${mediaConnection.connectionId}`);\n        mediaConnection.addStream(stream);\n    }\n}\n\n\n\n\n\nclass $23779d1881157a18$export$6a678e589c8a4542 extends (0, $c4dcfd1d1ea86647$exports.EventEmitter) {\n    /**\n\t * Emits a typed error message.\n\t *\n\t * @internal\n\t */ emitError(type, err) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"Error:\", err);\n        // @ts-ignore\n        this.emit(\"error\", new $23779d1881157a18$export$98871882f492de82(`${type}`, err));\n    }\n}\nclass $23779d1881157a18$export$98871882f492de82 extends Error {\n    /**\n\t * @internal\n\t */ constructor(type, err){\n        if (typeof err === \"string\") super(err);\n        else {\n            super();\n            Object.assign(this, err);\n        }\n        this.type = type;\n    }\n}\n\n\nclass $5045192fc6d387ba$export$23a2a68283c24d80 extends (0, $23779d1881157a18$export$6a678e589c8a4542) {\n    /**\n\t * Whether the media connection is active (e.g. your call has been answered).\n\t * You can check this if you want to set a maximum wait time for a one-sided call.\n\t */ get open() {\n        return this._open;\n    }\n    constructor(/**\n\t\t * The ID of the peer on the other end of this connection.\n\t\t */ peer, provider, options){\n        super();\n        this.peer = peer;\n        this.provider = provider;\n        this.options = options;\n        this._open = false;\n        this.metadata = options.metadata;\n    }\n}\n\n\nclass $5c1d08c7c57da9a3$export$4a84e95a2324ac29 extends (0, $5045192fc6d387ba$export$23a2a68283c24d80) {\n    static #_ = this.ID_PREFIX = \"mc_\";\n    /**\n\t * For media connections, this is always 'media'.\n\t */ get type() {\n        return (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Media;\n    }\n    get localStream() {\n        return this._localStream;\n    }\n    get remoteStream() {\n        return this._remoteStream;\n    }\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this._localStream = this.options._stream;\n        this.connectionId = this.options.connectionId || $5c1d08c7c57da9a3$export$4a84e95a2324ac29.ID_PREFIX + (0, $4f4134156c446392$export$7debb50ef11d5e0b).randomToken();\n        this._negotiator = new (0, $b82fb8fc0514bfc1$export$89e6bb5ad64bf4a)(this);\n        if (this._localStream) this._negotiator.startConnection({\n            _stream: this._localStream,\n            originator: true\n        });\n    }\n    /** Called by the Negotiator when the DataChannel is ready. */ _initializeDataChannel(dc) {\n        this.dataChannel = dc;\n        this.dataChannel.onopen = ()=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc connection success`);\n            this.emit(\"willCloseOnRemote\");\n        };\n        this.dataChannel.onclose = ()=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc closed for:`, this.peer);\n            this.close();\n        };\n    }\n    addStream(remoteStream) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Receiving stream\", remoteStream);\n        this._remoteStream = remoteStream;\n        super.emit(\"stream\", remoteStream); // Should we call this `open`?\n    }\n    /**\n\t * @internal\n\t */ handleMessage(message) {\n        const type = message.type;\n        const payload = message.payload;\n        switch(message.type){\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Answer:\n                // Forward to negotiator\n                this._negotiator.handleSDP(type, payload.sdp);\n                this._open = true;\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Candidate:\n                this._negotiator.handleCandidate(payload.candidate);\n                break;\n            default:\n                (0, $257947e92926277a$export$2e2bcd8739ae039).warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n                break;\n        }\n    }\n    /**\n     * When receiving a {@apilink PeerEvents | `call`} event on a peer, you can call\n     * `answer` on the media connection provided by the callback to accept the call\n     * and optionally send your own media stream.\n\n     *\n     * @param stream A WebRTC media stream.\n     * @param options\n     * @returns\n     */ answer(stream, options = {}) {\n        if (this._localStream) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"Local stream already exists on this MediaConnection. Are you answering a call twice?\");\n            return;\n        }\n        this._localStream = stream;\n        if (options && options.sdpTransform) this.options.sdpTransform = options.sdpTransform;\n        this._negotiator.startConnection({\n            ...this.options._payload,\n            _stream: stream\n        });\n        // Retrieve lost messages stored because PeerConnection not set up.\n        const messages = this.provider._getMessages(this.connectionId);\n        for (const message of messages)this.handleMessage(message);\n        this._open = true;\n    }\n    /**\n\t * Exposed functionality for users.\n\t */ /**\n\t * Closes the media connection.\n\t */ close() {\n        if (this._negotiator) {\n            this._negotiator.cleanup();\n            this._negotiator = null;\n        }\n        this._localStream = null;\n        this._remoteStream = null;\n        if (this.provider) {\n            this.provider._removeConnection(this);\n            this.provider = null;\n        }\n        if (this.options && this.options._stream) this.options._stream = null;\n        if (!this.open) return;\n        this._open = false;\n        super.emit(\"close\");\n    }\n}\n\n\n\n\n\n\nclass $abf266641927cd89$export$2c4e825dc9120f87 {\n    constructor(_options){\n        this._options = _options;\n    }\n    _buildRequest(method) {\n        const protocol = this._options.secure ? \"https\" : \"http\";\n        const { host: host, port: port, path: path, key: key } = this._options;\n        const url = new URL(`${protocol}://${host}:${port}${path}${key}/${method}`);\n        // TODO: Why timestamp, why random?\n        url.searchParams.set(\"ts\", `${Date.now()}${Math.random()}`);\n        url.searchParams.set(\"version\", (0, $f5f881ec4575f1fc$exports.version));\n        return fetch(url.href, {\n            referrerPolicy: this._options.referrerPolicy\n        });\n    }\n    /** Get a unique ID from the server via XHR and initialize with it. */ async retrieveId() {\n        try {\n            const response = await this._buildRequest(\"id\");\n            if (response.status !== 200) throw new Error(`Error. Status:${response.status}`);\n            return response.text();\n        } catch (error) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"Error retrieving ID\", error);\n            let pathError = \"\";\n            if (this._options.path === \"/\" && this._options.host !== (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST) pathError = \" If you passed in a `path` to your self-hosted PeerServer, you'll also need to pass in that same path when creating a new Peer.\";\n            throw new Error(\"Could not get an ID from the server.\" + pathError);\n        }\n    }\n    /** @deprecated */ async listAllPeers() {\n        try {\n            const response = await this._buildRequest(\"peers\");\n            if (response.status !== 200) {\n                if (response.status === 401) {\n                    let helpfulError = \"\";\n                    if (this._options.host === (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST) helpfulError = \"It looks like you're using the cloud server. You can email team@peerjs.com to enable peer listing for your API key.\";\n                    else helpfulError = \"You need to enable `allow_discovery` on your self-hosted PeerServer to use this feature.\";\n                    throw new Error(\"It doesn't look like you have permission to list peers IDs. \" + helpfulError);\n                }\n                throw new Error(`Error. Status:${response.status}`);\n            }\n            return response.json();\n        } catch (error) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"Error retrieving list peers\", error);\n            throw new Error(\"Could not get list peers from the server.\" + error);\n        }\n    }\n}\n\n\n\n\n\n\n\n\n\n\nclass $6366c4ca161bc297$export$d365f7ad9d7df9c9 extends (0, $5045192fc6d387ba$export$23a2a68283c24d80) {\n    static #_ = this.ID_PREFIX = \"dc_\";\n    static #_2 = this.MAX_BUFFERED_AMOUNT = 8388608;\n    get type() {\n        return (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Data;\n    }\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this.connectionId = this.options.connectionId || $6366c4ca161bc297$export$d365f7ad9d7df9c9.ID_PREFIX + (0, $0e5fd1585784c252$export$4e61f672936bec77)();\n        this.label = this.options.label || this.connectionId;\n        this.reliable = !!this.options.reliable;\n        this._negotiator = new (0, $b82fb8fc0514bfc1$export$89e6bb5ad64bf4a)(this);\n        this._negotiator.startConnection(this.options._payload || {\n            originator: true,\n            reliable: this.reliable\n        });\n    }\n    /** Called by the Negotiator when the DataChannel is ready. */ _initializeDataChannel(dc) {\n        this.dataChannel = dc;\n        this.dataChannel.onopen = ()=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc connection success`);\n            this._open = true;\n            this.emit(\"open\");\n        };\n        this.dataChannel.onmessage = (e)=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc onmessage:`, e.data);\n        // this._handleDataMessage(e);\n        };\n        this.dataChannel.onclose = ()=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc closed for:`, this.peer);\n            this.close();\n        };\n    }\n    /**\n\t * Exposed functionality for users.\n\t */ /** Allows user to close connection. */ close(options) {\n        if (options?.flush) {\n            this.send({\n                __peerData: {\n                    type: \"close\"\n                }\n            });\n            return;\n        }\n        if (this._negotiator) {\n            this._negotiator.cleanup();\n            this._negotiator = null;\n        }\n        if (this.provider) {\n            this.provider._removeConnection(this);\n            this.provider = null;\n        }\n        if (this.dataChannel) {\n            this.dataChannel.onopen = null;\n            this.dataChannel.onmessage = null;\n            this.dataChannel.onclose = null;\n            this.dataChannel = null;\n        }\n        if (!this.open) return;\n        this._open = false;\n        super.emit(\"close\");\n    }\n    /** Allows user to send data. */ send(data, chunked = false) {\n        if (!this.open) {\n            this.emitError((0, $78455e22dea96b8c$export$49ae800c114df41d).NotOpenYet, \"Connection is not open. You should listen for the `open` event before sending messages.\");\n            return;\n        }\n        return this._send(data, chunked);\n    }\n    async handleMessage(message) {\n        const payload = message.payload;\n        switch(message.type){\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Answer:\n                await this._negotiator.handleSDP(message.type, payload.sdp);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Candidate:\n                await this._negotiator.handleCandidate(payload.candidate);\n                break;\n            default:\n                (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"Unrecognized message type:\", message.type, \"from peer:\", this.peer);\n                break;\n        }\n    }\n}\n\n\nclass $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b extends (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9) {\n    get bufferSize() {\n        return this._bufferSize;\n    }\n    _initializeDataChannel(dc) {\n        super._initializeDataChannel(dc);\n        this.dataChannel.binaryType = \"arraybuffer\";\n        this.dataChannel.addEventListener(\"message\", (e)=>this._handleDataMessage(e));\n    }\n    _bufferedSend(msg) {\n        if (this._buffering || !this._trySend(msg)) {\n            this._buffer.push(msg);\n            this._bufferSize = this._buffer.length;\n        }\n    }\n    // Returns true if the send succeeds.\n    _trySend(msg) {\n        if (!this.open) return false;\n        if (this.dataChannel.bufferedAmount > (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9).MAX_BUFFERED_AMOUNT) {\n            this._buffering = true;\n            setTimeout(()=>{\n                this._buffering = false;\n                this._tryBuffer();\n            }, 50);\n            return false;\n        }\n        try {\n            this.dataChannel.send(msg);\n        } catch (e) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).error(`DC#:${this.connectionId} Error when sending:`, e);\n            this._buffering = true;\n            this.close();\n            return false;\n        }\n        return true;\n    }\n    // Try to send the first message in the buffer.\n    _tryBuffer() {\n        if (!this.open) return;\n        if (this._buffer.length === 0) return;\n        const msg = this._buffer[0];\n        if (this._trySend(msg)) {\n            this._buffer.shift();\n            this._bufferSize = this._buffer.length;\n            this._tryBuffer();\n        }\n    }\n    close(options) {\n        if (options?.flush) {\n            this.send({\n                __peerData: {\n                    type: \"close\"\n                }\n            });\n            return;\n        }\n        this._buffer = [];\n        this._bufferSize = 0;\n        super.close();\n    }\n    constructor(...args){\n        super(...args);\n        this._buffer = [];\n        this._bufferSize = 0;\n        this._buffering = false;\n    }\n}\n\n\n\n\nclass $9fcfddb3ae148f88$export$f0a5a64d5bb37108 extends (0, $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b) {\n    close(options) {\n        super.close(options);\n        this._chunkedData = {};\n    }\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this.chunker = new (0, $fcbcc7538a6776d5$export$f1c5f4c9cb95390b)();\n        this.serialization = (0, $78455e22dea96b8c$export$89f507cf986a947).Binary;\n        this._chunkedData = {};\n    }\n    // Handles a DataChannel message.\n    _handleDataMessage({ data: data }) {\n        const deserializedData = (0, $gCcbY$unpack)(data);\n        // PeerJS specific message\n        const peerData = deserializedData[\"__peerData\"];\n        if (peerData) {\n            if (peerData.type === \"close\") {\n                this.close();\n                return;\n            }\n            // Chunked data -- piece things back together.\n            // @ts-ignore\n            this._handleChunk(deserializedData);\n            return;\n        }\n        this.emit(\"data\", deserializedData);\n    }\n    _handleChunk(data) {\n        const id = data.__peerData;\n        const chunkInfo = this._chunkedData[id] || {\n            data: [],\n            count: 0,\n            total: data.total\n        };\n        chunkInfo.data[data.n] = new Uint8Array(data.data);\n        chunkInfo.count++;\n        this._chunkedData[id] = chunkInfo;\n        if (chunkInfo.total === chunkInfo.count) {\n            // Clean up before making the recursive call to `_handleDataMessage`.\n            delete this._chunkedData[id];\n            // We've received all the chunks--time to construct the complete data.\n            // const data = new Blob(chunkInfo.data);\n            const data = (0, $fcbcc7538a6776d5$export$52c89ebcdc4f53f2)(chunkInfo.data);\n            this._handleDataMessage({\n                data: data\n            });\n        }\n    }\n    _send(data, chunked) {\n        const blob = (0, $gCcbY$pack)(data);\n        if (blob instanceof Promise) return this._send_blob(blob);\n        if (!chunked && blob.byteLength > this.chunker.chunkedMTU) {\n            this._sendChunks(blob);\n            return;\n        }\n        this._bufferedSend(blob);\n    }\n    async _send_blob(blobPromise) {\n        const blob = await blobPromise;\n        if (blob.byteLength > this.chunker.chunkedMTU) {\n            this._sendChunks(blob);\n            return;\n        }\n        this._bufferedSend(blob);\n    }\n    _sendChunks(blob) {\n        const blobs = this.chunker.chunk(blob);\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n        for (const blob of blobs)this.send(blob, true);\n    }\n}\n\n\n\n\nclass $bbaee3f15f714663$export$6f88fe47d32c9c94 extends (0, $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b) {\n    _handleDataMessage({ data: data }) {\n        super.emit(\"data\", data);\n    }\n    _send(data, _chunked) {\n        this._bufferedSend(data);\n    }\n    constructor(...args){\n        super(...args);\n        this.serialization = (0, $78455e22dea96b8c$export$89f507cf986a947).None;\n    }\n}\n\n\n\n\n\nclass $817f931e3f9096cf$export$48880ac635f47186 extends (0, $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b) {\n    // Handles a DataChannel message.\n    _handleDataMessage({ data: data }) {\n        const deserializedData = this.parse(this.decoder.decode(data));\n        // PeerJS specific message\n        const peerData = deserializedData[\"__peerData\"];\n        if (peerData && peerData.type === \"close\") {\n            this.close();\n            return;\n        }\n        this.emit(\"data\", deserializedData);\n    }\n    _send(data, _chunked) {\n        const encodedData = this.encoder.encode(this.stringify(data));\n        if (encodedData.byteLength >= (0, $4f4134156c446392$export$7debb50ef11d5e0b).chunkedMTU) {\n            this.emitError((0, $78455e22dea96b8c$export$49ae800c114df41d).MessageToBig, \"Message too big for JSON channel\");\n            return;\n        }\n        this._bufferedSend(encodedData);\n    }\n    constructor(...args){\n        super(...args);\n        this.serialization = (0, $78455e22dea96b8c$export$89f507cf986a947).JSON;\n        this.encoder = new TextEncoder();\n        this.decoder = new TextDecoder();\n        this.stringify = JSON.stringify;\n        this.parse = JSON.parse;\n    }\n}\n\n\n\nclass $416260bce337df90$var$PeerOptions {\n}\nclass $416260bce337df90$export$ecd1fc136c422448 extends (0, $23779d1881157a18$export$6a678e589c8a4542) {\n    static #_ = this.DEFAULT_KEY = \"peerjs\";\n    /**\n\t * The brokering ID of this peer\n\t *\n\t * If no ID was specified in {@apilink Peer | the constructor},\n\t * this will be `undefined` until the {@apilink PeerEvents | `open`} event is emitted.\n\t */ get id() {\n        return this._id;\n    }\n    get options() {\n        return this._options;\n    }\n    get open() {\n        return this._open;\n    }\n    /**\n\t * @internal\n\t */ get socket() {\n        return this._socket;\n    }\n    /**\n\t * A hash of all connections associated with this peer, keyed by the remote peer's ID.\n\t * @deprecated\n\t * Return type will change from Object to Map<string,[]>\n\t */ get connections() {\n        const plainConnections = Object.create(null);\n        for (const [k, v] of this._connections)plainConnections[k] = v;\n        return plainConnections;\n    }\n    /**\n\t * true if this peer and all of its connections can no longer be used.\n\t */ get destroyed() {\n        return this._destroyed;\n    }\n    /**\n\t * false if there is an active connection to the PeerServer.\n\t */ get disconnected() {\n        return this._disconnected;\n    }\n    constructor(id, options){\n        super();\n        this._serializers = {\n            raw: (0, $bbaee3f15f714663$export$6f88fe47d32c9c94),\n            json: (0, $817f931e3f9096cf$export$48880ac635f47186),\n            binary: (0, $9fcfddb3ae148f88$export$f0a5a64d5bb37108),\n            \"binary-utf8\": (0, $9fcfddb3ae148f88$export$f0a5a64d5bb37108),\n            default: (0, $9fcfddb3ae148f88$export$f0a5a64d5bb37108)\n        };\n        this._id = null;\n        this._lastServerId = null;\n        // States.\n        this._destroyed = false // Connections have been killed\n        ;\n        this._disconnected = false // Connection to PeerServer killed but P2P connections still active\n        ;\n        this._open = false // Sockets and such are not yet open.\n        ;\n        this._connections = new Map() // All connections for this peer.\n        ;\n        this._lostMessages = new Map() // src => [list of messages]\n        ;\n        let userId;\n        // Deal with overloading\n        if (id && id.constructor == Object) options = id;\n        else if (id) userId = id.toString();\n        // Configurize options\n        options = {\n            debug: 0,\n            host: (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST,\n            port: (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_PORT,\n            path: \"/\",\n            key: $416260bce337df90$export$ecd1fc136c422448.DEFAULT_KEY,\n            token: (0, $4f4134156c446392$export$7debb50ef11d5e0b).randomToken(),\n            config: (0, $4f4134156c446392$export$7debb50ef11d5e0b).defaultConfig,\n            referrerPolicy: \"strict-origin-when-cross-origin\",\n            serializers: {},\n            ...options\n        };\n        this._options = options;\n        this._serializers = {\n            ...this._serializers,\n            ...this.options.serializers\n        };\n        // Detect relative URL host.\n        if (this._options.host === \"/\") this._options.host = window.location.hostname;\n        // Set path correctly.\n        if (this._options.path) {\n            if (this._options.path[0] !== \"/\") this._options.path = \"/\" + this._options.path;\n            if (this._options.path[this._options.path.length - 1] !== \"/\") this._options.path += \"/\";\n        }\n        // Set whether we use SSL to same as current host\n        if (this._options.secure === undefined && this._options.host !== (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST) this._options.secure = (0, $4f4134156c446392$export$7debb50ef11d5e0b).isSecure();\n        else if (this._options.host == (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST) this._options.secure = true;\n        // Set a custom log function if present\n        if (this._options.logFunction) (0, $257947e92926277a$export$2e2bcd8739ae039).setLogFunction(this._options.logFunction);\n        (0, $257947e92926277a$export$2e2bcd8739ae039).logLevel = this._options.debug || 0;\n        this._api = new (0, $abf266641927cd89$export$2c4e825dc9120f87)(options);\n        this._socket = this._createServerConnection();\n        // Sanity checks\n        // Ensure WebRTC supported\n        if (!(0, $4f4134156c446392$export$7debb50ef11d5e0b).supports.audioVideo && !(0, $4f4134156c446392$export$7debb50ef11d5e0b).supports.data) {\n            this._delayedAbort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).BrowserIncompatible, \"The current browser does not support WebRTC\");\n            return;\n        }\n        // Ensure alphanumeric id\n        if (!!userId && !(0, $4f4134156c446392$export$7debb50ef11d5e0b).validateId(userId)) {\n            this._delayedAbort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).InvalidID, `ID \"${userId}\" is invalid`);\n            return;\n        }\n        if (userId) this._initialize(userId);\n        else this._api.retrieveId().then((id)=>this._initialize(id)).catch((error)=>this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).ServerError, error));\n    }\n    _createServerConnection() {\n        const socket = new (0, $8f5bfa60836d261d$export$4798917dbf149b79)(this._options.secure, this._options.host, this._options.port, this._options.path, this._options.key, this._options.pingInterval);\n        socket.on((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Message, (data)=>{\n            this._handleMessage(data);\n        });\n        socket.on((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Error, (error)=>{\n            this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).SocketError, error);\n        });\n        socket.on((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Disconnected, ()=>{\n            if (this.disconnected) return;\n            this.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).Network, \"Lost connection to server.\");\n            this.disconnect();\n        });\n        socket.on((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Close, ()=>{\n            if (this.disconnected) return;\n            this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).SocketClosed, \"Underlying socket is already closed.\");\n        });\n        return socket;\n    }\n    /** Initialize a connection with the server. */ _initialize(id) {\n        this._id = id;\n        this.socket.start(id, this._options.token);\n    }\n    /** Handles messages from the server. */ _handleMessage(message) {\n        const type = message.type;\n        const payload = message.payload;\n        const peerId = message.src;\n        switch(type){\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Open:\n                this._lastServerId = this.id;\n                this._open = true;\n                this.emit(\"open\", this.id);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Error:\n                this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).ServerError, payload.msg);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).IdTaken:\n                this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).UnavailableID, `ID \"${this.id}\" is taken`);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).InvalidKey:\n                this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).InvalidKey, `API KEY \"${this._options.key}\" is invalid`);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Leave:\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Received leave message from ${peerId}`);\n                this._cleanupPeer(peerId);\n                this._connections.delete(peerId);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Expire:\n                this.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).PeerUnavailable, `Could not connect to peer ${peerId}`);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Offer:\n                {\n                    // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n                    const connectionId = payload.connectionId;\n                    let connection = this.getConnection(peerId, connectionId);\n                    if (connection) {\n                        connection.close();\n                        (0, $257947e92926277a$export$2e2bcd8739ae039).warn(`Offer received for existing Connection ID:${connectionId}`);\n                    }\n                    // Create a new connection.\n                    if (payload.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Media) {\n                        const mediaConnection = new (0, $5c1d08c7c57da9a3$export$4a84e95a2324ac29)(peerId, this, {\n                            connectionId: connectionId,\n                            _payload: payload,\n                            metadata: payload.metadata\n                        });\n                        connection = mediaConnection;\n                        this._addConnection(peerId, connection);\n                        this.emit(\"call\", mediaConnection);\n                    } else if (payload.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Data) {\n                        const dataConnection = new this._serializers[payload.serialization](peerId, this, {\n                            connectionId: connectionId,\n                            _payload: payload,\n                            metadata: payload.metadata,\n                            label: payload.label,\n                            serialization: payload.serialization,\n                            reliable: payload.reliable\n                        });\n                        connection = dataConnection;\n                        this._addConnection(peerId, connection);\n                        this.emit(\"connection\", dataConnection);\n                    } else {\n                        (0, $257947e92926277a$export$2e2bcd8739ae039).warn(`Received malformed connection type:${payload.type}`);\n                        return;\n                    }\n                    // Find messages.\n                    const messages = this._getMessages(connectionId);\n                    for (const message of messages)connection.handleMessage(message);\n                    break;\n                }\n            default:\n                {\n                    if (!payload) {\n                        (0, $257947e92926277a$export$2e2bcd8739ae039).warn(`You received a malformed message from ${peerId} of type ${type}`);\n                        return;\n                    }\n                    const connectionId = payload.connectionId;\n                    const connection = this.getConnection(peerId, connectionId);\n                    if (connection && connection.peerConnection) // Pass it on.\n                    connection.handleMessage(message);\n                    else if (connectionId) // Store for possible later use\n                    this._storeMessage(connectionId, message);\n                    else (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"You received an unrecognized message:\", message);\n                    break;\n                }\n        }\n    }\n    /** Stores messages without a set up connection, to be claimed later. */ _storeMessage(connectionId, message) {\n        if (!this._lostMessages.has(connectionId)) this._lostMessages.set(connectionId, []);\n        this._lostMessages.get(connectionId).push(message);\n    }\n    /**\n\t * Retrieve messages from lost message store\n\t * @internal\n\t */ //TODO Change it to private\n    _getMessages(connectionId) {\n        const messages = this._lostMessages.get(connectionId);\n        if (messages) {\n            this._lostMessages.delete(connectionId);\n            return messages;\n        }\n        return [];\n    }\n    /**\n\t * Connects to the remote peer specified by id and returns a data connection.\n\t * @param peer The brokering ID of the remote peer (their {@apilink Peer.id}).\n\t * @param options for specifying details about Peer Connection\n\t */ connect(peer, options = {}) {\n        options = {\n            serialization: \"default\",\n            ...options\n        };\n        if (this.disconnected) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect, or call reconnect on this peer if you believe its ID to still be available.\");\n            this.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).Disconnected, \"Cannot connect to new Peer after disconnecting from server.\");\n            return;\n        }\n        const dataConnection = new this._serializers[options.serialization](peer, this, options);\n        this._addConnection(peer, dataConnection);\n        return dataConnection;\n    }\n    /**\n\t * Calls the remote peer specified by id and returns a media connection.\n\t * @param peer The brokering ID of the remote peer (their peer.id).\n\t * @param stream The caller's media stream\n\t * @param options Metadata associated with the connection, passed in by whoever initiated the connection.\n\t */ call(peer, stream, options = {}) {\n        if (this.disconnected) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect.\");\n            this.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).Disconnected, \"Cannot connect to new Peer after disconnecting from server.\");\n            return;\n        }\n        if (!stream) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"To call a peer, you must provide a stream from your browser's `getUserMedia`.\");\n            return;\n        }\n        const mediaConnection = new (0, $5c1d08c7c57da9a3$export$4a84e95a2324ac29)(peer, this, {\n            ...options,\n            _stream: stream\n        });\n        this._addConnection(peer, mediaConnection);\n        return mediaConnection;\n    }\n    /** Add a data/media connection to this peer. */ _addConnection(peerId, connection) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`);\n        if (!this._connections.has(peerId)) this._connections.set(peerId, []);\n        this._connections.get(peerId).push(connection);\n    }\n    //TODO should be private\n    _removeConnection(connection) {\n        const connections = this._connections.get(connection.peer);\n        if (connections) {\n            const index = connections.indexOf(connection);\n            if (index !== -1) connections.splice(index, 1);\n        }\n        //remove from lost messages\n        this._lostMessages.delete(connection.connectionId);\n    }\n    /** Retrieve a data/media connection for this peer. */ getConnection(peerId, connectionId) {\n        const connections = this._connections.get(peerId);\n        if (!connections) return null;\n        for (const connection of connections){\n            if (connection.connectionId === connectionId) return connection;\n        }\n        return null;\n    }\n    _delayedAbort(type, message) {\n        setTimeout(()=>{\n            this._abort(type, message);\n        }, 0);\n    }\n    /**\n\t * Emits an error message and destroys the Peer.\n\t * The Peer is not destroyed if it's in a disconnected state, in which case\n\t * it retains its disconnected state and its existing connections.\n\t */ _abort(type, message) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"Aborting!\");\n        this.emitError(type, message);\n        if (!this._lastServerId) this.destroy();\n        else this.disconnect();\n    }\n    /**\n\t * Destroys the Peer: closes all active connections as well as the connection\n\t * to the server.\n\t *\n\t * :::caution\n\t * This cannot be undone; the respective peer object will no longer be able\n\t * to create or receive any connections, its ID will be forfeited on the server,\n\t * and all of its data and media connections will be closed.\n\t * :::\n\t */ destroy() {\n        if (this.destroyed) return;\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Destroy peer with ID:${this.id}`);\n        this.disconnect();\n        this._cleanup();\n        this._destroyed = true;\n        this.emit(\"close\");\n    }\n    /** Disconnects every connection on this peer. */ _cleanup() {\n        for (const peerId of this._connections.keys()){\n            this._cleanupPeer(peerId);\n            this._connections.delete(peerId);\n        }\n        this.socket.removeAllListeners();\n    }\n    /** Closes all connections to this peer. */ _cleanupPeer(peerId) {\n        const connections = this._connections.get(peerId);\n        if (!connections) return;\n        for (const connection of connections)connection.close();\n    }\n    /**\n\t * Disconnects the Peer's connection to the PeerServer. Does not close any\n\t *  active connections.\n\t * Warning: The peer can no longer create or accept connections after being\n\t *  disconnected. It also cannot reconnect to the server.\n\t */ disconnect() {\n        if (this.disconnected) return;\n        const currentId = this.id;\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Disconnect peer with ID:${currentId}`);\n        this._disconnected = true;\n        this._open = false;\n        this.socket.close();\n        this._lastServerId = currentId;\n        this._id = null;\n        this.emit(\"disconnected\", currentId);\n    }\n    /** Attempts to reconnect with the same ID.\n\t *\n\t * Only {@apilink Peer.disconnect | disconnected peers} can be reconnected.\n\t * Destroyed peers cannot be reconnected.\n\t * If the connection fails (as an example, if the peer's old ID is now taken),\n\t * the peer's existing connections will not close, but any associated errors events will fire.\n\t */ reconnect() {\n        if (this.disconnected && !this.destroyed) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Attempting reconnection to server with ID ${this._lastServerId}`);\n            this._disconnected = false;\n            this._initialize(this._lastServerId);\n        } else if (this.destroyed) throw new Error(\"This peer cannot reconnect to the server. It has already been destroyed.\");\n        else if (!this.disconnected && !this.open) // Do nothing. We're still connecting the first time.\n        (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"In a hurry? We're still trying to make the initial connection!\");\n        else throw new Error(`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`);\n    }\n    /**\n\t * Get a list of available peer IDs. If you're running your own server, you'll\n\t * want to set allow_discovery: true in the PeerServer options. If you're using\n\t * the cloud server, email team@peerjs.com to get the functionality enabled for\n\t * your key.\n\t */ listAllPeers(cb = (_)=>{}) {\n        this._api.listAllPeers().then((peers)=>cb(peers)).catch((error)=>this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).ServerError, error));\n    }\n}\n\n\n\n\n\n\nclass $20dbe68149d7aad9$export$72aa44612e2200cd extends (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9) {\n    constructor(peerId, provider, options){\n        super(peerId, provider, {\n            ...options,\n            reliable: true\n        });\n        this._CHUNK_SIZE = 32768;\n        this._splitStream = new TransformStream({\n            transform: (chunk, controller)=>{\n                for(let split = 0; split < chunk.length; split += this._CHUNK_SIZE)controller.enqueue(chunk.subarray(split, split + this._CHUNK_SIZE));\n            }\n        });\n        this._rawSendStream = new WritableStream({\n            write: async (chunk, controller)=>{\n                const openEvent = new Promise((resolve)=>this.dataChannel.addEventListener(\"bufferedamountlow\", resolve, {\n                        once: true\n                    }));\n                // if we can send the chunk now, send it\n                // if not, we wait until at least half of the sending buffer is free again\n                await (this.dataChannel.bufferedAmount <= (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9).MAX_BUFFERED_AMOUNT - chunk.byteLength || openEvent);\n                // TODO: what can go wrong here?\n                try {\n                    this.dataChannel.send(chunk);\n                } catch (e) {\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).error(`DC#:${this.connectionId} Error when sending:`, e);\n                    controller.error(e);\n                    this.close();\n                }\n            }\n        });\n        this.writer = this._splitStream.writable.getWriter();\n        this._rawReadStream = new ReadableStream({\n            start: (controller)=>{\n                this.once(\"open\", ()=>{\n                    this.dataChannel.addEventListener(\"message\", (e)=>{\n                        controller.enqueue(e.data);\n                    });\n                });\n            }\n        });\n        this._splitStream.readable.pipeTo(this._rawSendStream);\n    }\n    _initializeDataChannel(dc) {\n        super._initializeDataChannel(dc);\n        this.dataChannel.binaryType = \"arraybuffer\";\n        this.dataChannel.bufferedAmountLowThreshold = (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9).MAX_BUFFERED_AMOUNT / 2;\n    }\n}\n\n\nclass $6e39230ab36396ad$export$80f5de1a66c4d624 extends (0, $20dbe68149d7aad9$export$72aa44612e2200cd) {\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this.serialization = \"MsgPack\";\n        this._encoder = new (0, $gCcbY$Encoder)();\n        (async ()=>{\n            for await (const msg of (0, $gCcbY$decodeMultiStream)(this._rawReadStream)){\n                // @ts-ignore\n                if (msg.__peerData?.type === \"close\") {\n                    this.close();\n                    return;\n                }\n                this.emit(\"data\", msg);\n            }\n        })();\n    }\n    _send(data) {\n        return this.writer.write(this._encoder.encode(data));\n    }\n}\n\n\nclass $1e0aff16be2c328e$export$d72c7bf8eef50853 extends (0, $416260bce337df90$export$ecd1fc136c422448) {\n    constructor(...args){\n        super(...args);\n        this._serializers = {\n            MsgPack: $6e39230ab36396ad$export$80f5de1a66c4d624,\n            default: (0, $6e39230ab36396ad$export$80f5de1a66c4d624)\n        };\n    }\n}\n\n\n\n\n\n\n\nvar $dd0187d7f28e386f$export$2e2bcd8739ae039 = (0, $416260bce337df90$export$ecd1fc136c422448);\n\n\nexport {$dd0187d7f28e386f$export$2e2bcd8739ae039 as default, $4f4134156c446392$export$7debb50ef11d5e0b as util, $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b as BufferedConnection, $20dbe68149d7aad9$export$72aa44612e2200cd as StreamConnection, $6e39230ab36396ad$export$80f5de1a66c4d624 as MsgPack, $416260bce337df90$export$ecd1fc136c422448 as Peer, $1e0aff16be2c328e$export$d72c7bf8eef50853 as MsgPackPeer, $23779d1881157a18$export$98871882f492de82 as PeerError, $78455e22dea96b8c$export$3157d57b4135e3bc as ConnectionType, $78455e22dea96b8c$export$9547aaa2e39030ff as PeerErrorType, $78455e22dea96b8c$export$7974935686149686 as BaseConnectionErrorType, $78455e22dea96b8c$export$49ae800c114df41d as DataConnectionErrorType, $78455e22dea96b8c$export$89f507cf986a947 as SerializationType, $78455e22dea96b8c$export$3b5c4a4b6354f023 as SocketEventType, $78455e22dea96b8c$export$adb4a1754da6f10d as ServerMessageType};\n//# sourceMappingURL=bundler.mjs.map\n","/**\r\n * Base class for ngrok-related errors\r\n */\r\nexport class NgrokError extends Error {\r\n  /**\r\n   * @param {string} message - Error message\r\n   * @param {Object} details - Additional error details\r\n   */\r\n  constructor(message, details = {}) {\r\n    super(message);\r\n    this.name = 'NgrokError';\r\n    this.details = details;\r\n    this.timestamp = new Date().toISOString();\r\n    this.troubleshooting = [\r\n      'Verify the ngrok tunnel is running',\r\n      'Check if the ngrok URL is correct',\r\n      'Ensure the Kinectron application is running',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Error for ngrok connection failures\r\n */\r\nexport class NgrokConnectionError extends NgrokError {\r\n  constructor(message, details = {}) {\r\n    super(message, {\r\n      ...details,\r\n      type: 'connection_error',\r\n    });\r\n    this.name = 'NgrokConnectionError';\r\n    this.troubleshooting = [\r\n      'Check if the ngrok tunnel is still active',\r\n      'Verify your internet connection',\r\n      'Try restarting the ngrok tunnel',\r\n      'Ensure no firewall is blocking the connection',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Error for ngrok connection timeouts\r\n */\r\nexport class NgrokTimeoutError extends NgrokError {\r\n  constructor(message, details = {}) {\r\n    super(message, {\r\n      ...details,\r\n      type: 'timeout_error',\r\n    });\r\n    this.name = 'NgrokTimeoutError';\r\n    this.troubleshooting = [\r\n      'The connection attempt timed out',\r\n      'Check your internet connection speed',\r\n      'Verify the Kinectron server is running',\r\n      'Try increasing the connection timeout',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Error for invalid ngrok configuration or URLs\r\n */\r\nexport class NgrokValidationError extends NgrokError {\r\n  constructor(message, details = {}) {\r\n    super(message, {\r\n      ...details,\r\n      type: 'validation_error',\r\n    });\r\n    this.name = 'NgrokValidationError';\r\n    this.troubleshooting = [\r\n      'Ensure the URL includes \"ngrok-free.app\"',\r\n      'Copy the URL directly from the Kinectron application',\r\n      'Make sure to include the full domain name',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Error codes and their descriptions\r\n */\r\nexport const NgrokErrorCodes = {\r\n  INVALID_URL: {\r\n    code: 'NGROK_001',\r\n    message: 'Invalid ngrok URL format',\r\n  },\r\n  CONNECTION_FAILED: {\r\n    code: 'NGROK_002',\r\n    message: 'Failed to establish ngrok connection',\r\n  },\r\n  CONNECTION_TIMEOUT: {\r\n    code: 'NGROK_003',\r\n    message: 'Connection attempt timed out',\r\n  },\r\n  TUNNEL_CLOSED: {\r\n    code: 'NGROK_004',\r\n    message: 'Ngrok tunnel was closed',\r\n  },\r\n  SERVER_UNREACHABLE: {\r\n    code: 'NGROK_005',\r\n    message: 'Unable to reach Kinectron server',\r\n  },\r\n};\r\n","import { NgrokValidationError, NgrokErrorCodes } from './errors.js';\r\n\r\n/**\r\n * Validates a ngrok URL format\r\n * @param {string} url - The URL to validate\r\n * @throws {NgrokValidationError} If URL is invalid\r\n */\r\nfunction validateNgrokUrl(url) {\r\n  if (!url.includes('ngrok-free.app')) {\r\n    throw new NgrokValidationError(\r\n      NgrokErrorCodes.INVALID_URL.message,\r\n      {\r\n        code: NgrokErrorCodes.INVALID_URL.code,\r\n        url,\r\n        reason: 'URL must include ngrok-free.app domain',\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {Object} PeerNetworkConfig\r\n * @property {string} host - The host address for the peer server\r\n * @property {number|string} port - The port number for the peer server\r\n * @property {string} path - The path for the peer server\r\n * @property {boolean} [secure] - Whether to use secure connection\r\n * @property {string} [role] - Role identifier for the connection (e.g., 'modern-test', 'legacy-test')\r\n */\r\n\r\n/**\r\n * Default peer network configuration\r\n * @type {PeerNetworkConfig}\r\n */\r\nexport const DEFAULT_PEER_CONFIG = {\r\n  host: '127.0.0.1',\r\n  port: 9001,\r\n  path: '/',\r\n  secure: false,\r\n  debug: 3, // Enable detailed logging\r\n  role: 'default', // Default role identifier\r\n  // For local connections, we don't need STUN/TURN servers\r\n  // This matches the original kinectron implementation\r\n  config: {\r\n    iceServers: [],\r\n    sdpSemantics: 'unified-plan',\r\n  },\r\n};\r\n\r\n/**\r\n * Default peer ID for the Kinectron server\r\n * @type {string}\r\n */\r\nexport const DEFAULT_PEER_ID = 'kinectron';\r\n\r\n/**\r\n * Validates and processes peer network configuration\r\n * @param {Object} config - User provided network configuration\r\n * @returns {PeerNetworkConfig} Processed network configuration\r\n */\r\nexport function processPeerConfig(config) {\r\n  if (!config) return DEFAULT_PEER_CONFIG;\r\n\r\n  // Handle ngrok addresses\r\n  if (typeof config === 'string' && config.includes('ngrok')) {\r\n    try {\r\n      validateNgrokUrl(config);\r\n      return {\r\n        host: config,\r\n        port: '443',\r\n        path: '/',\r\n        secure: true,\r\n        debug: 3,\r\n        config: {\r\n          iceServers: [],\r\n          sdpSemantics: 'unified-plan',\r\n        },\r\n      };\r\n    } catch (error) {\r\n      // Add connection context to validation errors\r\n      if (error instanceof NgrokValidationError) {\r\n        error.details.context = 'peer_config_validation';\r\n        error.details.timestamp = new Date().toISOString();\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Handle IP addresses or custom configs\r\n  if (typeof config === 'string') {\r\n    return {\r\n      ...DEFAULT_PEER_CONFIG,\r\n      host: config,\r\n    };\r\n  }\r\n\r\n  // Handle full custom config objects\r\n  return {\r\n    ...DEFAULT_PEER_CONFIG,\r\n    ...config,\r\n  };\r\n}\r\n","/**\r\n * Represents a client-side ngrok connection state error\r\n */\r\nexport class NgrokClientError extends Error {\r\n  constructor(message, details = {}) {\r\n    super(message);\r\n    this.name = 'NgrokClientError';\r\n    this.details = details;\r\n    this.timestamp = new Date().toISOString();\r\n    this.troubleshooting = [\r\n      'Check if the ngrok tunnel is running',\r\n      'Verify the URL is correct',\r\n      'Ensure the Kinectron application is running',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Manages client-side ngrok connection state and metrics\r\n */\r\nexport class NgrokClientState {\r\n  /**\r\n   * Available connection states\r\n   */\r\n  static STATES = {\r\n    DISCONNECTED: 'disconnected',\r\n    VALIDATING: 'validating',\r\n    CONNECTING: 'connecting',\r\n    CONNECTED: 'connected',\r\n    RECONNECTING: 'reconnecting',\r\n    ERROR: 'error',\r\n  };\r\n\r\n  /**\r\n   * Valid state transitions\r\n   */\r\n  static VALID_TRANSITIONS = {\r\n    [NgrokClientState.STATES.DISCONNECTED]: [\r\n      NgrokClientState.STATES.VALIDATING,\r\n      NgrokClientState.STATES.CONNECTING,\r\n    ],\r\n    [NgrokClientState.STATES.VALIDATING]: [\r\n      NgrokClientState.STATES.CONNECTING,\r\n      NgrokClientState.STATES.ERROR,\r\n    ],\r\n    [NgrokClientState.STATES.CONNECTING]: [\r\n      NgrokClientState.STATES.CONNECTED,\r\n      NgrokClientState.STATES.RECONNECTING,\r\n      NgrokClientState.STATES.ERROR,\r\n      NgrokClientState.STATES.CONNECTING, // Allow re-entering connecting state\r\n    ],\r\n    [NgrokClientState.STATES.CONNECTED]: [\r\n      NgrokClientState.STATES.DISCONNECTED,\r\n      NgrokClientState.STATES.RECONNECTING,\r\n      NgrokClientState.STATES.ERROR,\r\n      NgrokClientState.STATES.CONNECTED, // Allow self-transition to refresh state\r\n    ],\r\n    [NgrokClientState.STATES.RECONNECTING]: [\r\n      NgrokClientState.STATES.CONNECTED,\r\n      NgrokClientState.STATES.CONNECTING,\r\n      NgrokClientState.STATES.ERROR,\r\n    ],\r\n    [NgrokClientState.STATES.ERROR]: [\r\n      NgrokClientState.STATES.DISCONNECTED,\r\n      NgrokClientState.STATES.CONNECTING,\r\n    ],\r\n  };\r\n\r\n  constructor() {\r\n    this.currentState = null; // Start with no state\r\n    this.metadata = {\r\n      url: null,\r\n      startTime: null,\r\n      lastStateChange: new Date(),\r\n      errorHistory: [],\r\n      metrics: {\r\n        latency: {\r\n          current: 0,\r\n          average: 0,\r\n          samples: [],\r\n        },\r\n        connectionQuality: 'unknown',\r\n        reconnects: {\r\n          count: 0,\r\n          lastAttempt: null,\r\n        },\r\n        errors: {\r\n          total: 0,\r\n          byType: {},\r\n        },\r\n      },\r\n    };\r\n\r\n    // Event handlers\r\n    this.handlers = {\r\n      stateChange: new Set(),\r\n      error: new Set(),\r\n      metrics: new Set(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Add event listener\r\n   * @param {string} event - Event type\r\n   * @param {Function} handler - Event handler\r\n   */\r\n  on(event, handler) {\r\n    if (this.handlers[event]) {\r\n      this.handlers[event].add(handler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove event listener\r\n   * @param {string} event - Event type\r\n   * @param {Function} handler - Event handler\r\n   */\r\n  off(event, handler) {\r\n    if (this.handlers[event]) {\r\n      this.handlers[event].delete(handler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emit event to handlers\r\n   * @private\r\n   * @param {string} event - Event type\r\n   * @param {*} data - Event data\r\n   */\r\n  _emit(event, data) {\r\n    if (this.handlers[event]) {\r\n      this.handlers[event].forEach((handler) => handler(data));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current state\r\n   * @returns {string} Current state\r\n   */\r\n  getState() {\r\n    return this.currentState;\r\n  }\r\n\r\n  /**\r\n   * Get state metadata\r\n   * @returns {Object} State metadata\r\n   */\r\n  getMetadata() {\r\n    return {\r\n      ...this.metadata,\r\n      currentState: this.currentState,\r\n      uptime: this._calculateUptime(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update connection metrics\r\n   * @param {Object} metrics - New metrics\r\n   */\r\n  updateMetrics(metrics) {\r\n    // Update latency\r\n    if (metrics.latency !== undefined) {\r\n      this.metadata.metrics.latency.current = metrics.latency;\r\n      this.metadata.metrics.latency.samples.push({\r\n        value: metrics.latency,\r\n        timestamp: new Date(),\r\n      });\r\n\r\n      // Keep last 10 samples\r\n      if (this.metadata.metrics.latency.samples.length > 10) {\r\n        this.metadata.metrics.latency.samples.shift();\r\n      }\r\n\r\n      // Calculate average\r\n      this.metadata.metrics.latency.average =\r\n        this.metadata.metrics.latency.samples.reduce(\r\n          (sum, sample) => sum + sample.value,\r\n          0,\r\n        ) / this.metadata.metrics.latency.samples.length;\r\n    }\r\n\r\n    // Update connection quality based on metrics\r\n    this._updateConnectionQuality();\r\n\r\n    // Emit metrics update\r\n    this._emit('metrics', this.metadata.metrics);\r\n  }\r\n\r\n  /**\r\n   * Set connection state\r\n   * @param {string} newState - New state\r\n   * @param {Object} details - Transition details\r\n   * @throws {NgrokClientError} If transition is invalid\r\n   */\r\n  setState(newState, details = {}) {\r\n    if (!this._isValidTransition(newState)) {\r\n      throw new NgrokClientError(\r\n        `Invalid state transition from ${this.currentState} to ${newState}`,\r\n        {\r\n          from: this.currentState,\r\n          to: newState,\r\n          details,\r\n        },\r\n      );\r\n    }\r\n\r\n    const oldState = this.currentState;\r\n    this.currentState = newState;\r\n    this.metadata.lastStateChange = new Date();\r\n\r\n    // Update metadata based on state\r\n    if (newState === NgrokClientState.STATES.CONNECTED) {\r\n      if (!this.metadata.startTime) {\r\n        this.metadata.startTime = new Date();\r\n      }\r\n    } else if (newState === NgrokClientState.STATES.RECONNECTING) {\r\n      this.metadata.metrics.reconnects.count++;\r\n      this.metadata.metrics.reconnects.lastAttempt = new Date();\r\n    }\r\n\r\n    // Emit state change event\r\n    this._emit('stateChange', {\r\n      from: oldState,\r\n      to: newState,\r\n      timestamp: this.metadata.lastStateChange,\r\n      details,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Record an error\r\n   * @param {Error} error - Error to record\r\n   * @param {Object} context - Error context\r\n   */\r\n  recordError(error, context = {}) {\r\n    const errorRecord = {\r\n      name: error.name,\r\n      message: error.message,\r\n      timestamp: new Date(),\r\n      context,\r\n      state: this.currentState,\r\n    };\r\n\r\n    // Add to error history (keep last 10)\r\n    this.metadata.errorHistory.unshift(errorRecord);\r\n    if (this.metadata.errorHistory.length > 10) {\r\n      this.metadata.errorHistory.pop();\r\n    }\r\n\r\n    // Update error metrics\r\n    this.metadata.metrics.errors.total++;\r\n    this.metadata.metrics.errors.byType[error.name] =\r\n      (this.metadata.metrics.errors.byType[error.name] || 0) + 1;\r\n\r\n    // Emit error event\r\n    this._emit('error', errorRecord);\r\n  }\r\n\r\n  /**\r\n   * Reset state to initial values\r\n   */\r\n  reset() {\r\n    this.currentState = null;\r\n    this.metadata = {\r\n      url: null,\r\n      startTime: null,\r\n      lastStateChange: new Date(),\r\n      errorHistory: [],\r\n      metrics: {\r\n        latency: {\r\n          current: 0,\r\n          average: 0,\r\n          samples: [],\r\n        },\r\n        connectionQuality: 'unknown',\r\n        reconnects: {\r\n          count: 0,\r\n          lastAttempt: null,\r\n        },\r\n        errors: {\r\n          total: 0,\r\n          byType: {},\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate connection uptime\r\n   * @private\r\n   * @returns {number} Uptime in milliseconds\r\n   */\r\n  _calculateUptime() {\r\n    if (\r\n      !this.metadata.startTime ||\r\n      this.currentState !== NgrokClientState.STATES.CONNECTED\r\n    ) {\r\n      return 0;\r\n    }\r\n    return Date.now() - this.metadata.startTime.getTime();\r\n  }\r\n\r\n  /**\r\n   * Update connection quality based on metrics\r\n   * @private\r\n   */\r\n  _updateConnectionQuality() {\r\n    const avgLatency = this.metadata.metrics.latency.average;\r\n    const recentErrors = this.metadata.errorHistory.filter(\r\n      (e) => Date.now() - new Date(e.timestamp).getTime() < 60000, // Last minute\r\n    ).length;\r\n\r\n    if (recentErrors > 2) {\r\n      this.metadata.metrics.connectionQuality = 'poor';\r\n    } else if (avgLatency > 1000) {\r\n      // 1 second\r\n      this.metadata.metrics.connectionQuality = 'unstable';\r\n    } else if (avgLatency > 500) {\r\n      // 500ms\r\n      this.metadata.metrics.connectionQuality = 'fair';\r\n    } else {\r\n      this.metadata.metrics.connectionQuality = 'good';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if state transition is valid\r\n   * @private\r\n   * @param {string} newState - State to transition to\r\n   * @returns {boolean} Whether transition is valid\r\n   */\r\n  _isValidTransition(newState) {\r\n    // Allow any initial state transition\r\n    if (this.currentState === null) {\r\n      return true;\r\n    }\r\n    const validNextStates =\r\n      NgrokClientState.VALID_TRANSITIONS[this.currentState];\r\n    return validNextStates && validNextStates.includes(newState);\r\n  }\r\n}\r\n","/**\r\n * Debug configuration for Kinectron client\r\n * Controls logging output for different components\r\n *\r\n * @namespace DEBUG\r\n */\r\n\r\nexport const DEBUG = {\r\n  /**\r\n   * Master switch for frame-related logging\r\n   * Controls logs about frame processing, transmission, and visualization\r\n   * @type {boolean}\r\n   */\r\n  FRAMES: false,\r\n\r\n  /**\r\n   * Master switch for handler-related logging\r\n   * Controls logs about stream handlers and event processing\r\n   * @type {boolean}\r\n   */\r\n  HANDLERS: false,\r\n\r\n  /**\r\n   * Master switch for peer connection logs\r\n   * Controls logs about WebRTC connections, state changes, and data channels\r\n   * @type {boolean}\r\n   */\r\n  PEER: false,\r\n\r\n  /**\r\n   * For performance-related logs\r\n   * Controls logs about timing, frame rates, and processing efficiency\r\n   * @type {boolean}\r\n   */\r\n  PERFORMANCE: false,\r\n\r\n  /**\r\n   * For data integrity logs\r\n   * Controls logs about data validation, transformation, and verification\r\n   * @type {boolean}\r\n   */\r\n  DATA: false,\r\n\r\n  /**\r\n   * For network-related logs\r\n   * Controls logs about network status, bandwidth, and transmission\r\n   * @type {boolean}\r\n   */\r\n  NETWORK: false,\r\n\r\n  /**\r\n   * Enable all debug flags\r\n   * Turns on all logging categories for comprehensive debugging\r\n   * @returns {void}\r\n   * @example\r\n   * // Enable all debug logs\r\n   * DEBUG.enableAll();\r\n   */\r\n  enableAll: function () {\r\n    Object.keys(this).forEach((key) => {\r\n      if (typeof this[key] === 'boolean') this[key] = true;\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Disable all debug flags\r\n   * Turns off all logging categories for clean console output\r\n   * @returns {void}\r\n   * @example\r\n   * // Disable all debug logs\r\n   * DEBUG.disableAll();\r\n   */\r\n  disableAll: function () {\r\n    Object.keys(this).forEach((key) => {\r\n      if (typeof this[key] === 'boolean') this[key] = false;\r\n    });\r\n  },\r\n};\r\n\r\n/**\r\n * Logging utility functions that check debug flags\r\n * Provides category-specific logging with automatic flag checking\r\n *\r\n * @namespace log\r\n */\r\nexport const log = {\r\n  /**\r\n   * Log error messages (always visible regardless of debug flags)\r\n   * Use for critical errors that should always be visible\r\n   *\r\n   * @param {string} message - The error message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.error('Failed to connect to server:', error);\r\n   */\r\n  error: function (message, ...args) {\r\n    console.error(message, ...args);\r\n  },\r\n\r\n  /**\r\n   * Log warning messages (always visible regardless of debug flags)\r\n   * Use for potential issues that should always be visible\r\n   *\r\n   * @param {string} message - The warning message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.warn('Connection attempt timed out, retrying...');\r\n   */\r\n  warn: function (message, ...args) {\r\n    console.warn(message, ...args);\r\n  },\r\n\r\n  /**\r\n   * Log informational messages (always visible regardless of debug flags)\r\n   * Use for important status updates that should always be visible\r\n   *\r\n   * @param {string} message - The info message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.info('Connected to Kinectron server');\r\n   */\r\n  info: function (message, ...args) {\r\n    console.log(message, ...args);\r\n  },\r\n\r\n  /**\r\n   * Log debug messages for a specific category\r\n   * Only logs if the specified debug flag is enabled\r\n   *\r\n   * @param {string} flag - The debug flag to check\r\n   * @param {string} message - The debug message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.debug('PERFORMANCE', 'Frame processing took:', processingTime, 'ms');\r\n   */\r\n  debug: function (flag, message, ...args) {\r\n    if (DEBUG[flag]) {\r\n      console.debug(`[${flag}] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log frame-related messages\r\n   * Only logs if the FRAMES debug flag is enabled\r\n   *\r\n   * @param {string} message - The frame-related message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.frame('Received color frame with dimensions:', width, 'x', height);\r\n   */\r\n  frame: function (message, ...args) {\r\n    if (DEBUG.FRAMES) {\r\n      console.debug(`[FRAMES] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log handler-related messages\r\n   * Only logs if the HANDLERS debug flag is enabled\r\n   *\r\n   * @param {string} message - The handler-related message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.handler('Creating body handler with callback');\r\n   */\r\n  handler: function (message, ...args) {\r\n    if (DEBUG.HANDLERS) {\r\n      console.debug(`[HANDLERS] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log peer connection-related messages\r\n   * Only logs if the PEER debug flag is enabled\r\n   *\r\n   * @param {string} message - The peer-related message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.peer('Connected to peer:', peerId);\r\n   */\r\n  peer: function (message, ...args) {\r\n    if (DEBUG.PEER) {\r\n      console.debug(`[PEER] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log performance-related messages\r\n   * Only logs if the PERFORMANCE debug flag is enabled\r\n   *\r\n   * @param {string} message - The performance-related message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.performance('Frame rate:', frameRate, 'fps');\r\n   */\r\n  performance: function (message, ...args) {\r\n    if (DEBUG.PERFORMANCE) {\r\n      console.debug(`[PERFORMANCE] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log data integrity-related messages\r\n   * Only logs if the DATA debug flag is enabled\r\n   *\r\n   * @param {string} message - The data-related message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.data('Unpacking raw depth data with dimensions:', width, 'x', height);\r\n   */\r\n  data: function (message, ...args) {\r\n    if (DEBUG.DATA) {\r\n      console.debug(`[DATA] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log network-related messages\r\n   * Only logs if the NETWORK debug flag is enabled\r\n   *\r\n   * @param {string} message - The network-related message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.network('Data channel buffer size:', bufferAmount, 'bytes');\r\n   */\r\n  network: function (message, ...args) {\r\n    if (DEBUG.NETWORK) {\r\n      console.debug(`[NETWORK] ${message}`, ...args);\r\n    }\r\n  },\r\n};\r\n","import Peer from 'peerjs';\r\nimport { DEFAULT_PEER_ID, processPeerConfig } from './peerConfig.js';\r\nimport { NgrokClientState, NgrokClientError } from './ngrokState.js';\r\nimport { DEBUG } from '../utils/debug.js';\r\n\r\n/**\r\n * @typedef {import('./peerConfig.js').PeerNetworkConfig} PeerNetworkConfig\r\n */\r\n\r\n/**\r\n * Enhanced peer-to-peer connection handler with improved reliability\r\n */\r\nexport class PeerConnection {\r\n  /**\r\n   * @param {string|PeerNetworkConfig} [networkConfig] - Network configuration or host address\r\n   * @param {string} [peerId] - ID of the peer to connect to\r\n   */\r\n  constructor(networkConfig, peerId) {\r\n    /** @private */\r\n    this.peer = null;\r\n    /** @private */\r\n    this.connection = null;\r\n    /** @private */\r\n    this.targetPeerId = peerId || DEFAULT_PEER_ID;\r\n    /** @private */\r\n    this.config = processPeerConfig(networkConfig);\r\n    /** @private */\r\n    this.messageHandlers = new Map();\r\n    /** @private */\r\n    this.messageQueue = [];\r\n    /** @private */\r\n    this.maxQueueSize = 100;\r\n    /** @private */\r\n    this.lastPingTime = 0;\r\n    /** @private */\r\n    this.pingInterval = null;\r\n    /** @private */\r\n    this.healthCheckInterval = null;\r\n    /** @private */\r\n    this.clientId = this.generateClientId();\r\n    /** @private */\r\n    this.state = new NgrokClientState();\r\n\r\n    // Forward state events to message handlers\r\n    this.state.on('stateChange', (data) => {\r\n      const handler = this.messageHandlers.get('stateChange');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    this.state.on('error', (data) => {\r\n      const handler = this.messageHandlers.get('error');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    this.state.on('metrics', (data) => {\r\n      const handler = this.messageHandlers.get('metrics');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  /**\r\n   * Generate a consistent client ID\r\n   * @private\r\n   * @returns {string} Client ID\r\n   */\r\n  generateClientId() {\r\n    // Generate unique ID for each instance\r\n    const timestamp = Date.now().toString(36);\r\n    const random = Math.random().toString(36).substr(2, 5);\r\n    const prefix = this.config.host?.includes('ngrok')\r\n      ? 'ngrok'\r\n      : 'local';\r\n    const role = this.config.role || 'default';\r\n    return `${prefix}-${role}-${timestamp}-${random}`;\r\n  }\r\n\r\n  /**\r\n   * Get current connection state\r\n   * @returns {Object} Current state information\r\n   */\r\n  getState() {\r\n    return this.state.getMetadata();\r\n  }\r\n\r\n  /**\r\n   * Initialize the peer connection with enhanced reliability\r\n   * @private\r\n   */\r\n  initialize() {\r\n    try {\r\n      if (this.peer) {\r\n        console.warn('Peer already initialized');\r\n        return;\r\n      }\r\n\r\n      if (DEBUG.PEER) {\r\n        console.log('Initializing peer with config:', this.config);\r\n      }\r\n\r\n      // Check if this is an ngrok connection\r\n      const isNgrok =\r\n        typeof this.config.host === 'string' &&\r\n        this.config.host.includes('ngrok');\r\n\r\n      if (isNgrok) {\r\n        // Set state to validating for ngrok connections\r\n        this.state.setState(NgrokClientState.STATES.VALIDATING);\r\n\r\n        // Validate ngrok URL format\r\n        if (!this.config.host.includes('ngrok-free.app')) {\r\n          throw new NgrokClientError('Invalid ngrok URL format', {\r\n            url: this.config.host,\r\n            reason: 'URL must include ngrok-free.app domain',\r\n          });\r\n        }\r\n      }\r\n\r\n      // Create peer instance with consistent ID\r\n      this.peer = new Peer(this.clientId, {\r\n        ...this.config,\r\n        // Basic reliability options\r\n        reliable: true,\r\n        retries: 2,\r\n        timeout: isNgrok ? 5000 : 3000,\r\n        debug: 0, // Reduced from 3 to 0 to suppress verbose logs\r\n      });\r\n\r\n      // Move to connecting state (skip validation for local connections)\r\n      if (!isNgrok) {\r\n        this.state.setState(NgrokClientState.STATES.CONNECTING);\r\n      }\r\n\r\n      this.setupPeerEventHandlers();\r\n      this.startHealthCheck();\r\n    } catch (error) {\r\n      console.error('Peer initialization error:', error);\r\n      this.handleError(error);\r\n      this.state.setState(NgrokClientState.STATES.ERROR, {\r\n        error: error.message,\r\n        context: 'initialization',\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set up event handlers for the peer instance\r\n   * @private\r\n   */\r\n  setupPeerEventHandlers() {\r\n    this.peer.on('open', (id) => {\r\n      if (DEBUG.PEER) {\r\n        console.log('My peer ID is:', id);\r\n      }\r\n      // Already in CONNECTING state, proceed with connection\r\n      this.connect();\r\n    });\r\n\r\n    this.peer.on('error', (error) => {\r\n      console.error('Peer connection error:', error);\r\n\r\n      // Handle ID taken error by generating new ID\r\n      if (error.type === 'unavailable-id') {\r\n        if (DEBUG.PEER) {\r\n          console.log('Client ID taken, generating new ID');\r\n        }\r\n        this.clientId = this.generateClientId();\r\n        this._cleanup(false);\r\n        this.initialize();\r\n        return;\r\n      }\r\n\r\n      this.handleError(error);\r\n\r\n      // Set error state\r\n      this.state.setState(NgrokClientState.STATES.ERROR, {\r\n        error: error.message,\r\n        type: error.type,\r\n      });\r\n\r\n      // Attempt reconnection if appropriate\r\n      if (this.shouldAttemptReconnection(error)) {\r\n        this._handleReconnection(error);\r\n      }\r\n    });\r\n\r\n    this.peer.on('disconnected', () => {\r\n      if (DEBUG.PEER) {\r\n        console.log('Peer disconnected from server');\r\n      }\r\n      this.state.setState(NgrokClientState.STATES.DISCONNECTED, {\r\n        reason: 'peer_disconnected',\r\n      });\r\n      this._handleReconnection({ type: 'disconnected' });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start health check interval\r\n   * @private\r\n   */\r\n  startHealthCheck() {\r\n    // Clear any existing intervals\r\n    if (this.healthCheckInterval) {\r\n      clearInterval(this.healthCheckInterval);\r\n    }\r\n    if (this.pingInterval) {\r\n      clearInterval(this.pingInterval);\r\n    }\r\n\r\n    // Start health check\r\n    this.healthCheckInterval = setInterval(() => {\r\n      if (\r\n        this.state.getState() === NgrokClientState.STATES.CONNECTED &&\r\n        this.connection\r\n      ) {\r\n        this.checkConnectionHealth();\r\n      }\r\n    }, 10000);\r\n\r\n    // Start ping interval\r\n    this.pingInterval = setInterval(() => {\r\n      if (\r\n        this.state.getState() === NgrokClientState.STATES.CONNECTED &&\r\n        this.connection?.open\r\n      ) {\r\n        this.sendPing();\r\n      }\r\n    }, 5000);\r\n  }\r\n\r\n  /**\r\n   * Check connection health\r\n   * @private\r\n   */\r\n  async checkConnectionHealth() {\r\n    if (!this.connection?.open) {\r\n      console.warn('Connection appears dead, attempting recovery');\r\n      await this.handleConnectionFailure();\r\n      return;\r\n    }\r\n\r\n    // Check last ping time\r\n    const timeSinceLastPing = Date.now() - this.lastPingTime;\r\n    if (timeSinceLastPing > 15000) {\r\n      // No ping response for 15 seconds\r\n      console.warn('No ping response, connection may be dead');\r\n      await this.handleConnectionFailure();\r\n    }\r\n\r\n    // Update connection metrics\r\n    this.state.updateMetrics({\r\n      latency: timeSinceLastPing,\r\n      timestamp: new Date(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Send ping to peer\r\n   * @private\r\n   */\r\n  sendPing() {\r\n    try {\r\n      this.connection.send({\r\n        event: 'ping',\r\n        data: { timestamp: Date.now() },\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to send ping:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle connection failure\r\n   * @private\r\n   */\r\n  async handleConnectionFailure() {\r\n    if (this.connection) {\r\n      try {\r\n        this.connection.close();\r\n      } catch (error) {\r\n        console.error('Error closing connection:', error);\r\n      }\r\n      this.connection = null;\r\n    }\r\n\r\n    this.state.setState(NgrokClientState.STATES.RECONNECTING, {\r\n      reason: 'connection_failure',\r\n      timestamp: new Date(),\r\n    });\r\n\r\n    await this._handleReconnection({ type: 'connection_failure' });\r\n  }\r\n\r\n  /**\r\n   * Handle errors with enhanced information\r\n   * @private\r\n   * @param {Error} error - The error that occurred\r\n   */\r\n  handleError(error) {\r\n    // Record error in state\r\n    this.state.recordError(error, {\r\n      type: error.type || 'server-error',\r\n      state: this.state.getState(),\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n\r\n    // Forward to message handler\r\n    const handler = this.messageHandlers.get('error');\r\n    if (handler) {\r\n      const errorInfo = {\r\n        status: 'error',\r\n        error: this._getErrorMessage(error),\r\n        details: {\r\n          type: error.type || 'server-error',\r\n          state: this.state.getState(),\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      };\r\n      handler(errorInfo);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get user-friendly error message\r\n   * @private\r\n   * @param {Error} error - The error object\r\n   * @returns {string} User-friendly error message\r\n   */\r\n  _getErrorMessage(error) {\r\n    const errorMessages = {\r\n      network: 'Network error - Could not connect to peer server',\r\n      'invalid-id':\r\n        'Invalid ID - The peer ID is invalid or already taken',\r\n      'unavailable-id':\r\n        'ID Unavailable - The peer ID is already taken',\r\n      'browser-incompatible':\r\n        'Browser Incompatible - WebRTC is not supported',\r\n      'connection-failure':\r\n        'Connection failed - Unable to establish or maintain connection',\r\n      disconnected: 'Disconnected - Lost connection to peer server',\r\n    };\r\n\r\n    return (\r\n      errorMessages[error.type] ||\r\n      error.message ||\r\n      'Peer connection error'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Determine if reconnection should be attempted\r\n   * @private\r\n   * @param {Error} error - The error that occurred\r\n   * @returns {boolean} Whether to attempt reconnection\r\n   */\r\n  shouldAttemptReconnection(error) {\r\n    // Don't reconnect for certain error types\r\n    const fatalErrors = [\r\n      'browser-incompatible',\r\n      'invalid-id',\r\n      'invalid-key',\r\n    ];\r\n    if (fatalErrors.includes(error.type)) {\r\n      return false;\r\n    }\r\n\r\n    return this.state.getMetadata().metrics.reconnects.count < 3;\r\n  }\r\n\r\n  /**\r\n   * Set connection timeout with enhanced retry logic\r\n   * @private\r\n   */\r\n  _setConnectionTimeout() {\r\n    const timeoutDuration = 15000; // 15 second timeout for ngrok connections\r\n\r\n    setTimeout(() => {\r\n      if (\r\n        this.state.getState() !== NgrokClientState.STATES.CONNECTED\r\n      ) {\r\n        if (DEBUG.PEER) {\r\n          console.log('Connection attempt timed out');\r\n        }\r\n\r\n        if (this.shouldAttemptReconnection({ type: 'timeout' })) {\r\n          this._handleReconnection({ type: 'timeout' });\r\n        } else {\r\n          this.handleError({\r\n            type: 'timeout',\r\n            message: 'Connection timeout - Max attempts reached',\r\n          });\r\n        }\r\n      }\r\n    }, timeoutDuration);\r\n  }\r\n\r\n  /**\r\n   * Handle reconnection logic with improved retry strategy\r\n   * @private\r\n   * @param {Error} error - The error that triggered reconnection\r\n   */\r\n  async _handleReconnection(error) {\r\n    // Update state to reconnecting\r\n    this.state.setState(NgrokClientState.STATES.RECONNECTING, {\r\n      error: error.message,\r\n      attempt: this.state.getMetadata().metrics.reconnects.count + 1,\r\n    });\r\n\r\n    // Use exponential backoff with jitter\r\n    const baseDelay = Math.min(\r\n      2000 *\r\n        Math.pow(\r\n          1.5,\r\n          this.state.getMetadata().metrics.reconnects.count,\r\n        ),\r\n      15000,\r\n    );\r\n    const jitter = baseDelay * 0.2 * (Math.random() * 2 - 1);\r\n    const delay = Math.max(2000, baseDelay + jitter);\r\n\r\n    if (DEBUG.PEER) {\r\n      console.log(\r\n        `Attempting reconnection ${\r\n          this.state.getMetadata().metrics.reconnects.count + 1\r\n        } of 3 in ${Math.round(delay)}ms`,\r\n      );\r\n    }\r\n\r\n    // Wait for delay\r\n    await new Promise((resolve) => setTimeout(resolve, delay));\r\n\r\n    if (\r\n      this.state.getState() === NgrokClientState.STATES.RECONNECTING\r\n    ) {\r\n      if (DEBUG.PEER) {\r\n        console.log('Attempting to reconnect...');\r\n      }\r\n\r\n      // Clean up existing resources\r\n      await this._cleanup(false);\r\n\r\n      // Only try to reconnect if we haven't exceeded max attempts\r\n      if (this.shouldAttemptReconnection(error)) {\r\n        // Move back to connecting state\r\n        this.state.setState(NgrokClientState.STATES.CONNECTING);\r\n        this.initialize();\r\n      } else {\r\n        if (DEBUG.PEER) {\r\n          console.log('Max reconnection attempts reached');\r\n        }\r\n        this.state.setState(NgrokClientState.STATES.ERROR, {\r\n          error: 'Maximum reconnection attempts reached',\r\n          type: 'max_retries',\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean up resources\r\n   * @private\r\n   * @param {boolean} [isClosing=true] - Whether this is a final cleanup\r\n   */\r\n  async _cleanup(isClosing = true) {\r\n    // Clean up existing peer\r\n    if (this.peer) {\r\n      this.peer.destroy();\r\n      this.peer = null;\r\n    }\r\n\r\n    // Clean up existing connection\r\n    if (this.connection) {\r\n      this.connection.close();\r\n      this.connection = null;\r\n    }\r\n\r\n    // Clear intervals if doing final cleanup\r\n    if (isClosing) {\r\n      if (this.healthCheckInterval) {\r\n        clearInterval(this.healthCheckInterval);\r\n        this.healthCheckInterval = null;\r\n      }\r\n      if (this.pingInterval) {\r\n        clearInterval(this.pingInterval);\r\n        this.pingInterval = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Connect to target peer with enhanced reliability\r\n   */\r\n  connect() {\r\n    try {\r\n      // Check if we already have a connection\r\n      if (this.peer.connections[this.targetPeerId]?.length > 0) {\r\n        const existingConn =\r\n          this.peer.connections[this.targetPeerId][0];\r\n        if (existingConn.open) {\r\n          if (DEBUG.PEER) {\r\n            console.log('Reusing existing connection');\r\n          }\r\n          this.connection = existingConn;\r\n          this.setupConnectionHandlers();\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Create new connection\r\n      if (DEBUG.PEER) {\r\n        console.log('Creating new connection to:', this.targetPeerId);\r\n      }\r\n      this.connection = this.peer.connect(this.targetPeerId, {\r\n        reliable: true,\r\n        serialization: 'binary', // Explicitly set to binary\r\n      });\r\n\r\n      this.setupConnectionHandlers();\r\n      this._setConnectionTimeout();\r\n    } catch (error) {\r\n      console.error('Error establishing connection:', error);\r\n      this._handleReconnection(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set up handlers for the peer connection\r\n   * @private\r\n   */\r\n  setupConnectionHandlers() {\r\n    this.connection.on('open', () => {\r\n      if (DEBUG.PEER) {\r\n        console.log('Connected to peer:', this.targetPeerId);\r\n      }\r\n\r\n      // Update state - Note: NgrokClientState allows connected->connected transition\r\n      // to handle multiple data channels opening on the same connection\r\n      this.state.setState(NgrokClientState.STATES.CONNECTED, {\r\n        peerId: this.targetPeerId,\r\n        timestamp: new Date(),\r\n      });\r\n\r\n      // Process any queued messages\r\n      this.processMessageQueue();\r\n\r\n      // Emit ready event\r\n      const handler = this.messageHandlers.get('ready');\r\n      if (handler) {\r\n        handler({\r\n          status: 'connected',\r\n          peerId: this.targetPeerId,\r\n          state: this.state.getState(),\r\n          timestamp: new Date().toISOString(),\r\n        });\r\n      }\r\n    });\r\n\r\n    this.connection.on('data', (data) => {\r\n      if (data.event === 'pong') {\r\n        this.lastPingTime = Date.now();\r\n        // Update latency metrics\r\n        const latency = Date.now() - data.data.timestamp;\r\n        this.state.updateMetrics({ latency });\r\n        return;\r\n      }\r\n      if (DEBUG.PEER) {\r\n        console.log('Received data from peer:', data);\r\n      }\r\n      this.handleIncomingData(data);\r\n    });\r\n\r\n    this.connection.on('close', () => {\r\n      if (DEBUG.PEER) {\r\n        console.log('Peer connection closed');\r\n      }\r\n\r\n      if (!this._isClosing) {\r\n        this.state.setState(NgrokClientState.STATES.DISCONNECTED, {\r\n          reason: 'connection_closed',\r\n        });\r\n        this._handleReconnection({ type: 'connection_closed' });\r\n      }\r\n    });\r\n\r\n    this.connection.on('error', (error) => {\r\n      console.error('Data connection error:', error);\r\n\r\n      this.state.setState(NgrokClientState.STATES.ERROR, {\r\n        error: error.message,\r\n        type: error.type,\r\n      });\r\n\r\n      this.handleError(error);\r\n      this._handleReconnection(error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle incoming data from peer with enhanced error handling\r\n   * @private\r\n   * @param {Object} data - Data received from peer\r\n   * @param {string} data.event - Event type\r\n   * @param {*} data.data - Event data\r\n   */\r\n  handleIncomingData(data) {\r\n    try {\r\n      if (DEBUG.PEER) {\r\n        console.log(\r\n          'PeerConnection: Received event:',\r\n          data.event,\r\n          'with data:',\r\n          data.data,\r\n        );\r\n      }\r\n\r\n      // First, try to find a specific handler for this event\r\n      const handler = this.messageHandlers.get(data.event);\r\n\r\n      if (handler) {\r\n        if (DEBUG.PEER) {\r\n          console.log(\r\n            'PeerConnection: Found specific handler for event:',\r\n            data.event,\r\n          );\r\n        }\r\n        handler({\r\n          ...data.data,\r\n          timestamp: Date.now(),\r\n          state: this.state.getState(),\r\n        });\r\n      } else {\r\n        if (DEBUG.PEER) {\r\n          console.log(\r\n            'PeerConnection: No specific handler for event:',\r\n            data.event,\r\n            'forwarding to data handler',\r\n          );\r\n        }\r\n        // If no specific handler is found, forward the event to the data handler\r\n        // This ensures all events are forwarded to the Kinectron class\r\n        const dataHandler = this.messageHandlers.get('data');\r\n\r\n        // if (data.event === 'bodyFrame') debugger;\r\n\r\n        if (dataHandler) {\r\n          dataHandler(data);\r\n        } else {\r\n          console.warn(\r\n            'PeerConnection: No data handler found for event:',\r\n            data.event,\r\n          );\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error handling incoming data:', error);\r\n      this.handleError({\r\n        type: 'data_handling_error',\r\n        message: 'Error processing received data',\r\n        originalError: error,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process queued messages\r\n   * @private\r\n   */\r\n  async processMessageQueue() {\r\n    while (\r\n      this.messageQueue.length > 0 &&\r\n      this.state.getState() === NgrokClientState.STATES.CONNECTED\r\n    ) {\r\n      const message = this.messageQueue.shift();\r\n      try {\r\n        await this.send(message.event, message.data);\r\n      } catch (error) {\r\n        console.error('Failed to send queued message:', error);\r\n        // Re-queue message if connection is still open\r\n        if (\r\n          this.state.getState() ===\r\n            NgrokClientState.STATES.CONNECTED &&\r\n          this.messageQueue.length < this.maxQueueSize\r\n        ) {\r\n          this.messageQueue.push(message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register a handler for a specific event type with validation\r\n   * @param {string} event - Event type to handle\r\n   * @param {Function} handler - Handler function for the event\r\n   */\r\n  on(event, handler) {\r\n    if (typeof handler !== 'function') {\r\n      throw new Error('Handler must be a function');\r\n    }\r\n    this.messageHandlers.set(event, handler);\r\n  }\r\n\r\n  /**\r\n   * Send data to peer with enhanced reliability\r\n   * @param {string} event - Event type\r\n   * @param {*} data - Data to send\r\n   * @returns {Promise<void>}\r\n   */\r\n  async send(event, data) {\r\n    return new Promise((resolve, reject) => {\r\n      if (\r\n        this.state.getState() !== NgrokClientState.STATES.CONNECTED ||\r\n        !this.connection?.open\r\n      ) {\r\n        // Queue message if not connected\r\n        if (this.messageQueue.length < this.maxQueueSize) {\r\n          this.messageQueue.push({ event, data });\r\n          resolve(); // Resolve since message was queued\r\n        } else {\r\n          reject(new Error('Message queue full'));\r\n        }\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const message = {\r\n          event,\r\n          data,\r\n          timestamp: Date.now(),\r\n        };\r\n\r\n        const timeout = setTimeout(() => {\r\n          reject(new Error('Send timeout'));\r\n        }, 5000);\r\n\r\n        this.connection.send(message);\r\n        clearTimeout(timeout);\r\n        resolve();\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Close the peer connection with graceful shutdown\r\n   */\r\n  async close() {\r\n    this._isClosing = true;\r\n\r\n    // Send shutdown message if possible\r\n    if (this.connection?.open) {\r\n      try {\r\n        await this.send('shutdown', { reason: 'client_close' });\r\n      } catch (error) {\r\n        console.error('Error sending shutdown message:', error);\r\n      }\r\n    }\r\n\r\n    // Clean up resources\r\n    await this._cleanup(true);\r\n\r\n    // Reset state\r\n    this.state.reset();\r\n    this.messageQueue = [];\r\n    this._isClosing = false;\r\n  }\r\n\r\n  /**\r\n   * Check if peer is connected\r\n   * @returns {boolean} Connection status\r\n   */\r\n  isConnected() {\r\n    return (\r\n      this.state.getState() === NgrokClientState.STATES.CONNECTED &&\r\n      this.connection?.open\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Utility functions for processing image data from different streams\r\n */\r\n\r\nimport { DEBUG, log } from './debug.js';\r\n\r\n/**\r\n * Process image data from a frame\r\n * @param {Object} frameData - The frame data containing image information\r\n * @param {number} width - The width of the image\r\n * @param {number} height - The height of the image\r\n * @param {Function} callback - Callback to receive the processed image\r\n */\r\nexport function processImageData(frameData, callback) {\r\n  // Check for both imagedata and imageData formats\r\n  const imagedata = frameData.imagedata || frameData.imageData;\r\n\r\n  if (!frameData || !imagedata) {\r\n    log.warn('Invalid frame data received:', frameData);\r\n    return;\r\n  }\r\n\r\n  const { width, height } = imagedata;\r\n\r\n  // Create a canvas to convert image data to a data URL\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n\r\n  try {\r\n    // Check if data is a string (data URL)\r\n    if (typeof imagedata.data === 'string') {\r\n      log.data('Processing image data from data URL');\r\n      createImageFromDataUrl(\r\n        imagedata.data,\r\n        width,\r\n        height,\r\n        (src) => {\r\n          // Call the user callback with processed frame\r\n          callback({\r\n            src,\r\n            width,\r\n            height,\r\n            raw: imagedata,\r\n            timestamp: frameData.timestamp || Date.now(),\r\n          });\r\n        },\r\n        (err) => {\r\n          log.error('Error loading image from data URL:', err);\r\n          // Try to call callback anyway with the raw data\r\n          callback({\r\n            src: imagedata.data,\r\n            width,\r\n            height,\r\n            raw: imagedata,\r\n            timestamp: frameData.timestamp || Date.now(),\r\n          });\r\n        },\r\n      );\r\n    } else {\r\n      log.data('Processing image data from raw pixel data');\r\n      // Handle raw pixel data\r\n      const pixelData = convertToUint8ClampedArray(imagedata.data);\r\n      const imgData = new ImageData(pixelData, width, height);\r\n\r\n      // Put the image data on the canvas\r\n      ctx.putImageData(imgData, 0, 0);\r\n\r\n      // Convert to data URL for easy display\r\n      const src = canvas.toDataURL('image/jpeg');\r\n\r\n      // Call the user callback with processed frame\r\n      callback({\r\n        src,\r\n        width,\r\n        height,\r\n        raw: imagedata,\r\n        timestamp: frameData.timestamp || Date.now(),\r\n      });\r\n    }\r\n  } catch (error) {\r\n    log.error('Error processing frame:', error);\r\n    log.error('Frame data:', imagedata);\r\n  }\r\n}\r\n\r\n/**\r\n * Create an image from a data URL\r\n * @param {string} dataUrl - The data URL\r\n * @param {number} width - The width of the image\r\n * @param {number} height - The height of the image\r\n * @param {Function} onSuccess - Success callback with the data URL\r\n * @param {Function} onError - Error callback\r\n */\r\nexport function createImageFromDataUrl(\r\n  dataUrl,\r\n  width,\r\n  height,\r\n  onSuccess,\r\n  onError,\r\n) {\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n\r\n  // Create an image from the data URL\r\n  const img = new Image();\r\n\r\n  img.onload = () => {\r\n    // Draw the image to the canvas\r\n    ctx.drawImage(img, 0, 0, width, height);\r\n\r\n    // Use the original data URL\r\n    onSuccess(dataUrl);\r\n  };\r\n\r\n  // Set error handler\r\n  img.onerror = (err) => {\r\n    if (onError) {\r\n      onError(err);\r\n    }\r\n  };\r\n\r\n  // Start loading the image\r\n  img.src = dataUrl;\r\n}\r\n\r\n/**\r\n * Convert various data formats to Uint8ClampedArray\r\n * @param {*} data - The data to convert\r\n * @returns {Uint8ClampedArray} - The converted data\r\n */\r\nexport function convertToUint8ClampedArray(data) {\r\n  if (data instanceof Uint8ClampedArray) {\r\n    return data;\r\n  } else if (data instanceof Uint8Array) {\r\n    return new Uint8ClampedArray(data);\r\n  } else if (Array.isArray(data)) {\r\n    return new Uint8ClampedArray(data);\r\n  } else {\r\n    // Handle case where data is an object (e.g., from JSON)\r\n    return new Uint8ClampedArray(Object.values(data));\r\n  }\r\n}\r\n","/**\r\n * Stream handler factory functions\r\n */\r\n\r\nimport * as imageUtils from '../utils/imageProcessing.js';\r\nimport { DEBUG, log } from '../utils/debug.js';\r\n\r\n/**\r\n * Create a frame handler for image-based streams\r\n * @param {string} streamType - The type of stream ('color', 'depth', 'key', etc.)\r\n * @param {Function} callback - The callback to receive processed frames\r\n * @returns {Function} - The frame handler function\r\n */\r\nexport function createFrameHandler(streamType, callback) {\r\n  return (data) => {\r\n    // Extract the actual frame data\r\n    const frameData = data.data || data;\r\n\r\n    log.handler(\r\n      `Frame handler for ${streamType} received:`,\r\n      frameData,\r\n    );\r\n\r\n    // Check for both imagedata and imageData formats\r\n    const hasImageData = frameData.imagedata || frameData.imageData;\r\n\r\n    // Only process frames with matching name\r\n    if (frameData.name === streamType && hasImageData) {\r\n      // Normalize the data structure to ensure imagedata exists\r\n      if (frameData.imageData && !frameData.imagedata) {\r\n        frameData.imagedata = frameData.imageData;\r\n      }\r\n\r\n      // Process the image data\r\n      imageUtils.processImageData(frameData, callback);\r\n    } else {\r\n      log.warn(\r\n        `Received frame event but it's not a valid ${streamType} frame:`,\r\n        'name=',\r\n        frameData.name,\r\n        'has imagedata=',\r\n        !!(frameData.imagedata || frameData.imageData),\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Create a handler for raw depth data\r\n * @param {Function} callback - The callback to receive processed frames\r\n * @param {Function} unpackFunction - Function to unpack raw depth data\r\n * @returns {Function} - The raw depth handler function\r\n */\r\nexport function createRawDepthHandler(callback, unpackFunction) {\r\n  return (data) => {\r\n    if (data && data.imagedata) {\r\n      // Process the data regardless of isPacked flag\r\n      // The new implementation always unpacks the data\r\n      unpackFunction(\r\n        data.imagedata,\r\n        data.width,\r\n        data.height,\r\n        data.width, // originalWidth is the same as width in new implementation\r\n        data.testValues, // Pass test values to unpacking function\r\n      )\r\n        .then((depthValues) => {\r\n          // Call the callback with the unpacked data\r\n          callback({\r\n            ...data,\r\n            depthValues: depthValues,\r\n            timestamp: data.timestamp || Date.now(),\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          log.error('Error unpacking raw depth data:', error);\r\n          // Still call the callback with the original data\r\n          callback({\r\n            ...data,\r\n            error: 'Failed to unpack depth data: ' + error.message,\r\n            timestamp: data.timestamp || Date.now(),\r\n          });\r\n        });\r\n    } else if (data && data.rawDepthData) {\r\n      // Legacy format - raw depth data is already in a usable format\r\n      callback({\r\n        ...data,\r\n        timestamp: data.timestamp || Date.now(),\r\n      });\r\n    } else {\r\n      log.warn(\r\n        'Received raw depth frame with invalid data format:',\r\n        data,\r\n      );\r\n      callback({\r\n        ...data,\r\n        error: 'Invalid data format',\r\n        timestamp: data.timestamp || Date.now(),\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Create a handler for body tracking data\r\n * @param {Function} callback - The callback to receive processed frames\r\n * @returns {Function} - The body handler function\r\n */\r\nexport function createBodyHandler(callback) {\r\n  log.handler('Creating body handler with callback:', callback);\r\n\r\n  return (eventData) => {\r\n    const bodyData = eventData.data;\r\n    if (bodyData && bodyData.bodies) {\r\n      // Body data is already in a usable format (array of body objects)\r\n      // Just add timestamp and pass it through\r\n      callback({\r\n        bodies: bodyData.bodies,\r\n        timestamp: bodyData.timestamp || Date.now(),\r\n        floorClipPlane: bodyData.floorClipPlane,\r\n        trackingId: bodyData.trackingId,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Create a handler for multi-frame data\r\n * @param {Function} callback - The callback to receive processed frames\r\n * @returns {Function} - The multi-frame handler function\r\n */\r\nexport function createMultiFrameHandler(callback) {\r\n  return (data) => {\r\n    if (data && data.frames) {\r\n      // Process each frame based on its type\r\n      const processedFrames = {};\r\n\r\n      // Process each frame in the multiframe data\r\n      Object.entries(data.frames).forEach(([type, frameData]) => {\r\n        if (frameData.imagedata) {\r\n          // For image-based frames, convert to data URL\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n          const { width, height } = frameData.imagedata;\r\n\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n\r\n          // Create ImageData object from the raw data\r\n          const imgData = new ImageData(\r\n            imageUtils.convertToUint8ClampedArray(\r\n              frameData.imagedata.data,\r\n            ),\r\n            width,\r\n            height,\r\n          );\r\n\r\n          // Put the image data on the canvas\r\n          ctx.putImageData(imgData, 0, 0);\r\n\r\n          // Convert to data URL\r\n          processedFrames[type] = {\r\n            src: canvas.toDataURL('image/jpeg'),\r\n            width,\r\n            height,\r\n            raw: frameData.imagedata,\r\n          };\r\n        } else {\r\n          // For non-image data (like body tracking), pass through\r\n          processedFrames[type] = frameData;\r\n        }\r\n      });\r\n\r\n      // Call the user callback with processed frames\r\n      callback({\r\n        frames: processedFrames,\r\n        timestamp: data.timestamp || Date.now(),\r\n      });\r\n    }\r\n  };\r\n}\r\n","/**\r\n * @fileoverview Main entry point for the Kinectron client library\r\n * @version 1.0.1\r\n * @description Kinectron enables real-time streaming of Microsoft Azure Kinect data into web browsers using WebRTC.\r\n * This client library connects to a Kinectron server running on a computer with an Azure Kinect device.\r\n */\r\n\r\nimport { Kinectron } from './kinectron.js';\r\n\r\nconsole.log('You are running Kinectron API version 1.0.1');\r\n\r\n/**\r\n * Kinectron client class for connecting to a Kinectron server and accessing Azure Kinect data streams\r\n *\r\n * @module kinectron\r\n * @exports Kinectron\r\n * @example\r\n * // Using ES modules (recommended)\r\n * import Kinectron from 'kinectron';\r\n *\r\n * // Create a new Kinectron instance\r\n * const kinectron = new Kinectron('127.0.0.1');\r\n *\r\n * // Connect and initialize\r\n * kinectron.on('ready', () => {\r\n *   console.log('Connected to Kinectron server');\r\n *   kinectron.initKinect()\r\n *     .then(() => {\r\n *       // Start a color stream\r\n *       kinectron.startColor((colorFrame) => {\r\n *         // Display the color image\r\n *         document.getElementById('colorImage').src = colorFrame.src;\r\n *       });\r\n *     });\r\n * });\r\n *\r\n * // Using script tag (UMD build)\r\n * // <script src=\"https://cdn.jsdelivr.net/npm/kinectron@1.0.0/dist/kinectron.umd.js\"></script>\r\n * // const kinectron = new Kinectron('127.0.0.1');\r\n */\r\nexport default Kinectron;\r\n","import { PeerConnection } from './peer/peerConnection.js';\r\nimport { NgrokClientState } from './peer/ngrokState.js';\r\nimport { DEBUG, log } from './utils/debug.js';\r\nimport {\r\n  createFrameHandler,\r\n  createRawDepthHandler,\r\n  createBodyHandler,\r\n  createMultiFrameHandler,\r\n} from './streams/streamHandlers.js';\r\n\r\n/**\r\n * Kinectron client for connecting to a Kinectron server and accessing Azure Kinect data streams\r\n *\r\n * @class\r\n */\r\nexport class Kinectron {\r\n  /**\r\n   * Creates a new Kinectron client instance for connecting to a Kinectron server\r\n   *\r\n   * @param {Object|string} [networkConfig] - Network configuration or server IP address\r\n   * @param {string} [networkConfig.host='127.0.0.1'] - Host address for the peer server\r\n   * @param {number|string} [networkConfig.port=9001] - Port number for the peer server\r\n   * @param {string} [networkConfig.path='/'] - Path for the peer server\r\n   * @param {boolean} [networkConfig.secure=false] - Whether to use secure connection\r\n   * @param {string} [networkConfig.role='default'] - Role identifier for the connection\r\n   * @example\r\n   * // Connect to local server\r\n   * const kinectron = new Kinectron();\r\n   *\r\n   * // Connect to specific IP\r\n   * const kinectron = new Kinectron('192.168.0.1');\r\n   *\r\n   * // Connect to ngrok tunnel\r\n   * const kinectron = new Kinectron('https://abcd1234.ngrok-free.app');\r\n   *\r\n   * // Connect with custom config\r\n   * const kinectron = new Kinectron({\r\n   *   host: '192.168.0.1',\r\n   *   port: 9001,\r\n   *   secure: false\r\n   * });\r\n   */\r\n  constructor(networkConfig) {\r\n    this.peer = new PeerConnection(networkConfig);\r\n    this.messageHandlers = new Map();\r\n    this.state = null;\r\n\r\n    // Set up event handlers\r\n    this.peer.on('ready', (data) => {\r\n      this.state = data.state;\r\n      const handler = this.messageHandlers.get('ready');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    this.peer.on('error', (error) => {\r\n      const handler = this.messageHandlers.get('error');\r\n      if (handler) handler(error);\r\n    });\r\n\r\n    // Handle state changes\r\n    this.peer.on('stateChange', (data) => {\r\n      this.state = data.to;\r\n      const handler = this.messageHandlers.get('stateChange');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    // Handle metrics updates\r\n    this.peer.on('metrics', (data) => {\r\n      const handler = this.messageHandlers.get('metrics');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    // Handle incoming data\r\n    this.peer.on('data', (data) => {\r\n      const { event, data: eventData } = data;\r\n      const handler = this.messageHandlers.get(event);\r\n\r\n      if (handler) {\r\n        // if (event === 'bodyFrame') debugger;\r\n\r\n        handler(eventData);\r\n      } else {\r\n        log.warn('Kinectron: No handler found for event:', event);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Register an event handler for a specific event type\r\n   *\r\n   * @param {string} event - Event type to handle\r\n   * @param {Function} callback - Handler function for the event\r\n   * @example\r\n   * // Handle connection ready event\r\n   * kinectron.on('ready', (data) => {\r\n   *   console.log('Connected to Kinectron server!');\r\n   * });\r\n   *\r\n   * // Handle connection errors\r\n   * kinectron.on('error', (error) => {\r\n   *   console.error('Connection error:', error);\r\n   * });\r\n   *\r\n   * // Handle state changes\r\n   * kinectron.on('stateChange', (data) => {\r\n   *   console.log('Connection state changed from', data.from, 'to', data.to);\r\n   * });\r\n   */\r\n  on(event, callback) {\r\n    this.messageHandlers.set(event, callback);\r\n  }\r\n\r\n  /**\r\n   * Get the current connection state and metadata\r\n   *\r\n   * @returns {Object} Current state information including connection status, metrics, and error history\r\n   * @example\r\n   * const state = kinectron.getState();\r\n   * console.log('Connection state:', state.currentState);\r\n   * console.log('Connection quality:', state.metrics.connectionQuality);\r\n   * console.log('Latency:', state.metrics.latency.current, 'ms');\r\n   */\r\n  getState() {\r\n    return this.peer.getState();\r\n  }\r\n\r\n  /**\r\n   * Check if the client is currently connected to a Kinectron server\r\n   *\r\n   * @returns {boolean} True if connected, false otherwise\r\n   * @example\r\n   * if (kinectron.isConnected()) {\r\n   *   console.log('Connected to Kinectron server');\r\n   * } else {\r\n   *   console.log('Not connected');\r\n   * }\r\n   */\r\n  isConnected() {\r\n    return this.state === NgrokClientState.STATES.CONNECTED;\r\n  }\r\n\r\n  /**\r\n   * Set the Kinect hardware type to use\r\n   *\r\n   * @param {string} kinectType - The type of Kinect hardware ('azure' or 'windows')\r\n   * @returns {void}\r\n   * @example\r\n   * // Set to Azure Kinect\r\n   * kinectron.setKinectType('azure');\r\n   *\r\n   * // Set to Kinect for Windows v2\r\n   * kinectron.setKinectType('windows');\r\n   */\r\n  setKinectType(kinectType) {\r\n    if (!this.isConnected()) {\r\n      log.warn('Cannot set Kinect type: not connected');\r\n      return;\r\n    }\r\n    this.send('setkinect', kinectType);\r\n  }\r\n\r\n  /**\r\n   * Initialize the Kinect hardware on the server\r\n   *\r\n   * @param {Function} [callback] - Optional callback for backward compatibility\r\n   * @returns {Promise<Object>} Promise resolving to initialization result\r\n   * @throws {Error} If not connected or initialization fails\r\n   * @example\r\n   * // Using Promise-based approach (recommended)\r\n   * kinectron.initKinect()\r\n   *   .then(result => {\r\n   *     console.log('Kinect initialized:', result.success);\r\n   *     // Start streams after successful initialization\r\n   *     kinectron.startColor(handleColorFrame);\r\n   *   })\r\n   *   .catch(error => {\r\n   *     console.error('Failed to initialize Kinect:', error);\r\n   *   });\r\n   *\r\n   * // Using callback approach (legacy)\r\n   * kinectron.initKinect((result) => {\r\n   *   if (result.success) {\r\n   *     console.log('Kinect initialized successfully');\r\n   *     // Start streams after successful initialization\r\n   *     kinectron.startColor(handleColorFrame);\r\n   *   } else {\r\n   *     console.error('Failed to initialize Kinect:', result.error);\r\n   *   }\r\n   * });\r\n   */\r\n  initKinect(callback) {\r\n    if (!this.isConnected()) {\r\n      log.warn('Cannot initialize Kinect: not connected');\r\n      return Promise.reject(\r\n        new Error('Cannot initialize Kinect: not connected'),\r\n      );\r\n    }\r\n\r\n    // Create a promise that resolves when we get the kinectInitialized event\r\n    const initPromise = new Promise((resolve, reject) => {\r\n      // Set up a one-time handler for the initialization response\r\n      const handler = (data) => {\r\n        // Normalize the success value to handle nested structure\r\n        let isSuccess = false;\r\n        if (\r\n          data.success &&\r\n          typeof data.success === 'object' &&\r\n          data.success.success === true\r\n        ) {\r\n          isSuccess = true;\r\n        } else if (\r\n          typeof data.success === 'boolean' &&\r\n          data.success === true\r\n        ) {\r\n          isSuccess = true;\r\n        }\r\n\r\n        // Create a normalized result object\r\n        const normalizedResult = {\r\n          success: isSuccess,\r\n          alreadyInitialized: !!data.alreadyInitialized,\r\n          error: data.error || null,\r\n          rawData: data, // Include the original data for debugging\r\n        };\r\n\r\n        if (isSuccess || data.alreadyInitialized) {\r\n          resolve(normalizedResult);\r\n        } else {\r\n          reject(\r\n            new Error(data.error || 'Failed to initialize Kinect'),\r\n          );\r\n        }\r\n\r\n        // Remove the handler after it's been called\r\n        this.messageHandlers.delete('kinectInitialized');\r\n      };\r\n\r\n      this.messageHandlers.set('kinectInitialized', handler);\r\n\r\n      // Send initialization request to server\r\n      this.send('initkinect', {});\r\n    });\r\n\r\n    // For backward compatibility, if a callback is provided, use it\r\n    if (callback) {\r\n      initPromise\r\n        .then((data) => callback(data))\r\n        .catch((error) =>\r\n          callback({ success: false, error: error.message }),\r\n        );\r\n    }\r\n\r\n    // Return the promise for modern Promise-based usage\r\n    return initPromise;\r\n  }\r\n\r\n  /**\r\n   * Send data to the Kinectron server\r\n   *\r\n   * @param {string} event - Event type\r\n   * @param {*} data - Data to send\r\n   * @returns {void}\r\n   * @example\r\n   * // Send custom data to the server\r\n   * kinectron.send('custom-event', { message: 'Hello from client' });\r\n   */\r\n  send(event, data) {\r\n    if (!this.isConnected()) {\r\n      log.warn('Cannot send data: not connected');\r\n      return;\r\n    }\r\n    this.peer.send(event, data);\r\n  }\r\n\r\n  /**\r\n   * Start the color camera stream\r\n   *\r\n   * @param {Function} [callback] - Callback function that receives color frames\r\n   * @returns {void}\r\n   * @example\r\n   * kinectron.startColor((colorFrame) => {\r\n   *   // colorFrame contains:\r\n   *   // - src: Data URL of the color image\r\n   *   // - width: Image width\r\n   *   // - height: Image height\r\n   *   // - raw: Raw image data\r\n   *   // - timestamp: Frame timestamp\r\n   *\r\n   *   // Display the color image\r\n   *   const img = document.getElementById('colorImage');\r\n   *   img.src = colorFrame.src;\r\n   * });\r\n   */\r\n  startColor(callback) {\r\n    if (callback) {\r\n      // Set up frame handler to process color frames\r\n      this.messageHandlers.set(\r\n        'frame',\r\n        createFrameHandler('color', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'color' });\r\n  }\r\n\r\n  /**\r\n   * Start the depth camera stream (processed depth image)\r\n   *\r\n   * @param {Function} [callback] - Callback function that receives depth frames\r\n   * @returns {void}\r\n   * @example\r\n   * kinectron.startDepth((depthFrame) => {\r\n   *   // depthFrame contains:\r\n   *   // - src: Data URL of the depth image (colorized)\r\n   *   // - width: Image width\r\n   *   // - height: Image height\r\n   *   // - raw: Raw image data\r\n   *   // - timestamp: Frame timestamp\r\n   *\r\n   *   // Display the depth image\r\n   *   const img = document.getElementById('depthImage');\r\n   *   img.src = depthFrame.src;\r\n   * });\r\n   */\r\n  startDepth(callback) {\r\n    if (callback) {\r\n      // Set up frame handler to process depth frames\r\n      this.messageHandlers.set(\r\n        'frame',\r\n        createFrameHandler('depth', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'depth' });\r\n  }\r\n\r\n  /**\r\n   * Unpacks raw depth data from a WebP image\r\n   * @private\r\n   * @param {string} dataUrl - The data URL containing the depth data\r\n   * @param {number} width - The width of the image\r\n   * @param {number} height - The height of the image\r\n   * @param {number} originalWidth - The original width of the depth data (not used in new implementation)\r\n   * @param {Object} testValues - Test values to verify unpacking accuracy\r\n   * @returns {Promise<Uint16Array>} - Promise resolving to the unpacked depth values\r\n   */\r\n  _unpackRawDepthData(\r\n    dataUrl,\r\n    width,\r\n    height,\r\n    originalWidth,\r\n    testValues,\r\n  ) {\r\n    // Log using the imported debug module\r\n    if (DEBUG.DATA) {\r\n      log.data(\r\n        'Unpacking raw depth data with dimensions:',\r\n        width,\r\n        'x',\r\n        height,\r\n      );\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      // Create image to load the data URL\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        // Use OffscreenCanvas for efficient processing\r\n        const canvas = new OffscreenCanvas(width, height);\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        // Draw the image to the canvas\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // Get the pixel data\r\n        const imageData = ctx.getImageData(0, 0, width, height).data;\r\n\r\n        // Create array for unpacked depth values\r\n        const depthValues = new Uint16Array(width * height);\r\n\r\n        // Process the raw depth data exactly like the app.js client code\r\n        let j = 0;\r\n        for (let i = 0; i < imageData.length; i += 4) {\r\n          // Extract depth value from R and G channels\r\n          const depth = (imageData[i + 1] << 8) | imageData[i]; // Get uint16 data from buffer\r\n          depthValues[j++] = depth;\r\n        }\r\n\r\n        // Verify test values if provided\r\n        if (testValues && DEBUG.DATA) {\r\n          const unpackedValue1000 = depthValues[1000];\r\n          const unpackedValue2000 = depthValues[2000];\r\n          const unpackedValue3000 = depthValues[3000];\r\n\r\n          log.data('Test values comparison:', {\r\n            'Index 1000': {\r\n              Original: testValues.index1000,\r\n              Unpacked: unpackedValue1000,\r\n              Difference: testValues.index1000 - unpackedValue1000,\r\n            },\r\n            'Index 2000': {\r\n              Original: testValues.index2000,\r\n              Unpacked: unpackedValue2000,\r\n              Difference: testValues.index2000 - unpackedValue2000,\r\n            },\r\n            'Index 3000': {\r\n              Original: testValues.index3000,\r\n              Unpacked: unpackedValue3000,\r\n              Difference: testValues.index3000 - unpackedValue3000,\r\n            },\r\n          });\r\n        }\r\n\r\n        resolve(depthValues);\r\n      };\r\n\r\n      img.onerror = (err) => {\r\n        reject(new Error('Failed to load depth image: ' + err));\r\n      };\r\n\r\n      img.src = dataUrl;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start the raw depth stream (16-bit depth values)\r\n   *\r\n   * @param {Function} [callback] - Callback function that receives raw depth frames\r\n   * @returns {void}\r\n   * @example\r\n   * kinectron.startRawDepth((rawDepthFrame) => {\r\n   *   // rawDepthFrame contains:\r\n   *   // - depthValues: Uint16Array of 16-bit depth values\r\n   *   // - width: Frame width\r\n   *   // - height: Frame height\r\n   *   // - timestamp: Frame timestamp\r\n   *\r\n   *   // Access raw depth values\r\n   *   const depthValues = rawDepthFrame.depthValues;\r\n   *\r\n   *   // Example: Find minimum and maximum depth\r\n   *   let min = Infinity;\r\n   *   let max = 0;\r\n   *   for (let i = 0; i < depthValues.length; i++) {\r\n   *     if (depthValues[i] > 0) { // Ignore zero values (no data)\r\n   *       min = Math.min(min, depthValues[i]);\r\n   *       max = Math.max(max, depthValues[i]);\r\n   *     }\r\n   *   }\r\n   *   console.log(`Depth range: ${min}mm to ${max}mm`);\r\n   * });\r\n   */\r\n  startRawDepth(callback) {\r\n    if (callback) {\r\n      // Set up handler to process raw depth frames\r\n      this.messageHandlers.set(\r\n        'rawDepth',\r\n        createRawDepthHandler(\r\n          callback,\r\n          this._unpackRawDepthData.bind(this),\r\n        ),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'raw-depth' });\r\n  }\r\n\r\n  /**\r\n   * Start the body tracking stream\r\n   *\r\n   * @param {Function} [callback] - Callback function that receives body tracking frames\r\n   * @returns {void}\r\n   * @example\r\n   * kinectron.startBodies((bodyFrame) => {\r\n   *   // bodyFrame contains:\r\n   *   // - bodies: Array of tracked bodies\r\n   *   // - timestamp: Frame timestamp\r\n   *   // - floorClipPlane: Floor plane data\r\n   *   // - trackingId: Tracking session ID\r\n   *\r\n   *   // Process each tracked body\r\n   *   bodyFrame.bodies.forEach(body => {\r\n   *     // Each body contains joint positions and orientations\r\n   *     const joints = body.joints;\r\n   *\r\n   *     // Example: Get head position\r\n   *     const head = joints.find(joint => joint.name === 'head');\r\n   *     if (head) {\r\n   *       console.log('Head position:', head.position);\r\n   *     }\r\n   *   });\r\n   * });\r\n   */\r\n  startBodies(callback) {\r\n    if (callback) {\r\n      // Set up handler to process body tracking frames\r\n      this.messageHandlers.set(\r\n        'bodyFrame',\r\n        createBodyHandler(callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'body' });\r\n  }\r\n\r\n  /**\r\n   * Start the key (green screen) stream\r\n   *\r\n   * @param {Function} [callback] - Callback function that receives key frames\r\n   * @returns {void}\r\n   * @example\r\n   * kinectron.startKey((keyFrame) => {\r\n   *   // keyFrame contains:\r\n   *   // - src: Data URL of the key image (color with background removed)\r\n   *   // - width: Image width\r\n   *   // - height: Image height\r\n   *   // - raw: Raw image data\r\n   *   // - timestamp: Frame timestamp\r\n   *\r\n   *   // Display the key image\r\n   *   const img = document.getElementById('keyImage');\r\n   *   img.src = keyFrame.src;\r\n   * });\r\n   */\r\n  startKey(callback) {\r\n    if (callback) {\r\n      // Set up frame handler to process key frames\r\n      this.messageHandlers.set(\r\n        'frame',\r\n        createFrameHandler('key', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'key' });\r\n  }\r\n\r\n  /**\r\n   * Start the depth key stream (depth data with background removed)\r\n   *\r\n   * @param {Function} [callback] - Callback function that receives depth key frames\r\n   * @returns {void}\r\n   * @example\r\n   * kinectron.startDepthKey((depthKeyFrame) => {\r\n   *   // depthKeyFrame contains:\r\n   *   // - src: Data URL of the depth key image\r\n   *   // - width: Image width\r\n   *   // - height: Image height\r\n   *   // - raw: Raw image data\r\n   *   // - timestamp: Frame timestamp\r\n   *\r\n   *   // Display the depth key image\r\n   *   const img = document.getElementById('depthKeyImage');\r\n   *   img.src = depthKeyFrame.src;\r\n   * });\r\n   */\r\n  startDepthKey(callback) {\r\n    if (callback) {\r\n      // Set up handler to process depth key frames\r\n      this.messageHandlers.set(\r\n        'depth-key', // Changed from 'depthKey' to match server's broadcast event name\r\n        createFrameHandler('depth-key', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'depth-key' });\r\n  }\r\n\r\n  /**\r\n   * Start the RGBD stream (aligned color and depth)\r\n   *\r\n   * @param {Function} [callback] - Callback function that receives RGBD frames\r\n   * @returns {void}\r\n   * @example\r\n   * kinectron.startRGBD((rgbdFrame) => {\r\n   *   // rgbdFrame contains:\r\n   *   // - src: Data URL of the RGBD image\r\n   *   // - width: Image width\r\n   *   // - height: Image height\r\n   *   // - raw: Raw image data\r\n   *   // - timestamp: Frame timestamp\r\n   *\r\n   *   // Display the RGBD image\r\n   *   const img = document.getElementById('rgbdImage');\r\n   *   img.src = rgbdFrame.src;\r\n   * });\r\n   */\r\n  startRGBD(callback) {\r\n    if (callback) {\r\n      // Set up frame handler to process RGBD frames\r\n      this.messageHandlers.set(\r\n        'frame',\r\n        createFrameHandler('rgbd', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'rgbd' });\r\n  }\r\n\r\n  /**\r\n   * Start multiple streams simultaneously\r\n   *\r\n   * @param {string[]} frames - Array of stream types to start ('color', 'depth', 'body', etc.)\r\n   * @param {Function} [callback] - Callback function that receives multi-frame data\r\n   * @returns {void}\r\n   * @example\r\n   * // Start color and depth streams together\r\n   * kinectron.startMultiFrame(['color', 'depth'], (multiFrame) => {\r\n   *   // multiFrame contains:\r\n   *   // - frames: Object with a property for each requested stream type\r\n   *   // - timestamp: Frame timestamp\r\n   *\r\n   *   // Access individual frames\r\n   *   const colorFrame = multiFrame.frames.color;\r\n   *   const depthFrame = multiFrame.frames.depth;\r\n   *\r\n   *   // Display the images\r\n   *   document.getElementById('colorImage').src = colorFrame.src;\r\n   *   document.getElementById('depthImage').src = depthFrame.src;\r\n   * });\r\n   */\r\n  startMultiFrame(frames, callback) {\r\n    if (callback) {\r\n      // Set up handler to process multi-frame data\r\n      this.messageHandlers.set(\r\n        'multiFrame',\r\n        createMultiFrameHandler(callback),\r\n      );\r\n    }\r\n    this.send('multi', frames);\r\n  }\r\n\r\n  /**\r\n   * Stop all active streams\r\n   *\r\n   * @returns {void}\r\n   * @example\r\n   * // Stop all active streams\r\n   * kinectron.stopAll();\r\n   */\r\n  stopAll() {\r\n    this.send('feed', { feed: 'stop-all' });\r\n  }\r\n\r\n  /**\r\n   * Close the connection and clean up resources\r\n   *\r\n   * @returns {void}\r\n   * @example\r\n   * // Close the connection when done\r\n   * kinectron.close();\r\n   */\r\n  close() {\r\n    this.peer.close();\r\n    this.messageHandlers.clear();\r\n    this.state = null;\r\n  }\r\n}\r\n"],"names":["$e8379818650e2442$export$93654d4f2d6cd524","constructor","this","encoder","TextEncoder","_pieces","_parts","append_buffer","data","flush","push","append","length","buf","Uint8Array","toArrayBuffer","buffer","part","bufs","size","byteLength","result","offset","view","byteOffset","set","$e8379818650e2442$var$concatArrayBuffers","$0cfd7828ad59115f$export$417857010dc9287f","$0cfd7828ad59115f$var$Unpacker","unpack","$0cfd7828ad59115f$export$2a703dbb0cb35339","packer","$0cfd7828ad59115f$export$b9ec4b114aa40074","res","pack","Promise","then","getBuffer","index","dataBuffer","dataView","type","unpack_uint8","unpack_raw","unpack_string","unpack_array","unpack_map","unpack_float","unpack_double","unpack_uint16","unpack_uint32","unpack_uint64","unpack_int8","unpack_int16","unpack_int32","unpack_int64","byte","bytes","read","uint16","uint32","uint64","uint8","Error","slice","c","code","i","str","String","fromCodePoint","objects","Array","map","h32","exp","j","subarray","_bufferBuilder","value","pack_string","Math","floor","pack_integer","pack_double","undefined","pack_array","ArrayBuffer","pack_bin","v","Date","toString","Blob","arrayBuffer","Object","startsWith","pack_object","blob","pack_uint8","pack_uint16","pack_uint32","encoded","_textEncoder","encode","ary","packNext","num","pack_int8","pack_int16","pack_int32","pack_int64","pack_uint64","sign","log","LN2","frac0","frac1","b32","l32","obj","keys","prop","hasOwnProperty","n","high","low","logDisabled_","deprecationWarnings_","extractVersion","uastring","expr","pos","match","parseFloat","wrapPeerConnectionEvent","window","eventNameToWrap","wrapper","RTCPeerConnection","proto","prototype","nativeAddEventListener","addEventListener","nativeEventName","cb","apply","arguments","wrappedCallback","e","modifiedEvent","handleEvent","_eventMap","Map","nativeRemoveEventListener","removeEventListener","has","unwrappedCb","get","delete","defineProperty","enumerable","configurable","disableLog","bool","disableWarnings","console","deprecated","oldMethod","newMethod","warn","isObject","val","call","compactObject","reduce","accumulator","key","isObj","isEmptyObject","assign","walkStats","stats","base","resultSet","id","forEach","name","endsWith","filterStats","track","outbound","streamStatsType","filteredResult","trackStats","trackIdentifier","trackStat","trackId","logging","utils.log","shimGetUserMedia","browserDetails","navigator","mediaDevices","constraintsToChrome_","mandatory","optional","cc","r","ideal","exact","min","max","oldname_","prefix","charAt","toUpperCase","oc","mix","advanced","concat","shimConstraints_","constraints","func","version","JSON","parse","stringify","audio","remap","a","b","video","face","facingMode","getSupportedFacingModeLies","getSupportedConstraints","matches","enumerateDevices","devices","dev","filter","d","kind","find","some","label","toLowerCase","includes","deviceId","shimError_","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","message","constraint","constraintName","getUserMedia","onSuccess","onError","webkitGetUserMedia","bind","origGetUserMedia","cs","stream","getAudioTracks","getVideoTracks","getTracks","stop","DOMException","reject","shimMediaStream","MediaStream","webkitMediaStream","shimOnTrack","_ontrack","f","origSetRemoteDescription","setRemoteDescription","_ontrackpoly","te","receiver","getReceivers","event","Event","transceiver","streams","dispatchEvent","utils.wrapPeerConnectionEvent","shimGetSendersWithDtmf","shimSenderWithDtmf","pc","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","origAddTrack","addTrack","sender","origRemoveTrack","removeTrack","idx","indexOf","splice","origAddStream","addStream","origRemoveStream","removeStream","s","RTCRtpSender","origGetSenders","senders","shimSenderReceiverGetStats","RTCRtpReceiver","getStats","utils.filterStats","origGetReceivers","receivers","srcElement","origGetStats","MediaStreamTrack","err","shimAddTrackRemoveTrackWithNative","getLocalStreams","_shimmedLocalStreams","streamId","existingSenders","newSenders","newSender","shimAddTrackRemoveTrack","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","replaceInternalStreamId","description","sdp","internalId","externalStream","internalStream","replace","RegExp","RTCSessionDescription","signalingState","t","oldStream","resolve","method","nativeMethod","methodObj","args","desc","origSetLocalDescription","setLocalDescription","replaceExternalStreamId","origLocalDescription","getOwnPropertyDescriptor","streamid","shimPeerConnection","webkitRTCPeerConnection","RTCIceCandidate","fixNegotiationNeeded","target","getConfiguration","sdpSemantics","utils.deprecated","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","RTCTrackEvent","mozRTCPeerConnection","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","nativeGetStats","selector","onSucc","onErr","stat","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimAddTransceiver","origAddTransceiver","addTransceiver","setParametersPromises","sendEncodings","shouldPerformCheck","encodingParam","test","rid","TypeError","scaleResolutionDownBy","RangeError","maxFramerate","params","getParameters","encodings","setParameters","catch","shimGetParameters","origGetParameters","shimCreateOffer","origCreateOffer","createOffer","all","finally","shimCreateAnswer","origCreateAnswer","createAnswer","preferredMediaSource","getDisplayMedia","mediaSource","shimLocalStreamsAPI","_localStreams","_addTrack","tracks","shimRemoteStreamsAPI","getRemoteStreams","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","addIceCandidate","successCallback","failureCallback","options","promise","withCallback","candidate","_getUserMedia","shimConstraints","errcb","utils.compactObject","shimRTCIceServerUrls","OrigPeerConnection","pcConfig","pcConstraints","iceServers","newIceServers","server","urls","url","generateCertificate","shimTrackEventTransceiver","shimCreateOfferLegacy","offerOptions","offerToReceiveAudio","audioTransceiver","getTransceivers","direction","setDirection","offerToReceiveVideo","videoTransceiver","shimAudioContext","AudioContext","webkitAudioContext","SDPUtils","random","substring","localCName","generateIdentifier","splitLines","trim","split","line","splitSections","getDescription","sections","getMediaSections","shift","matchPrefix","parseCandidate","parts","foundation","component","protocol","priority","parseInt","ip","address","port","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","join","parseIceOptions","parseRtpMap","parsed","payloadType","clockRate","channels","numChannels","writeRtpMap","codec","pt","preferredPayloadType","parseExtmap","uri","attributes","writeExtmap","headerExtension","preferredId","parseFmtp","kv","writeFmtp","parameters","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","parseCryptoLine","tag","cryptoSuite","keyParams","sessionParams","writeCryptoLine","writeCryptoKeyParams","parseCryptoKeyParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","getCryptoParameters","getIceParameters","pwd","password","writeIceParameters","iceLite","parseRtpParameters","codecs","headerExtensions","fecMechanisms","rtcp","mline","profile","rtpmapline","fmtps","wildcardRtcpFb","existingFeedback","writeRtpDescription","caps","maxptime","extension","parseRtpEncodingParameters","encodingParameters","hasRed","hasUlpfec","primarySsrc","secondarySsrc","flows","apt","encParam","codecPayloadType","rtx","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","cname","rsize","reducedSize","compound","mux","writeRtcpParameters","parseMsid","spec","planB","msidParts","parseSctpDescription","parseMLine","maxSizeLine","maxMessageSize","isNaN","sctpPort","fmt","sctpMapLines","writeSctpDescription","media","sctp","output","generateSessionId","substr","writeSessionBoilerplate","sessId","sessVer","sessUser","sessionId","getDirection","getKind","isRejected","parseOLine","username","sessionVersion","netType","addressType","isValidSDP","module","shimRTCIceCandidate","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","toJSON","sdpMid","sdpMLineIndex","writable","shimRTCIceCandidateRelayProtocol","relayProtocol","shimMaxMessageSize","_sctp","browser","mLine","sctpInDescription","isFirefox","getRemoteFirefoxVersion","canSendMMS","remoteIsFirefox","canSendMaxMessageSize","getCanSendMaxMessageSize","remoteMMS","getMaxMessageSize","Number","POSITIVE_INFINITY","shimSendThrowTypeError","wrapDcSend","dc","origDataChannelSend","send","readyState","origCreateDataChannel","createDataChannel","dataChannel","channel","shimConnectionState","completed","checking","iceConnectionState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","connectionState","newEvent","removeExtmapAllowMixed","_safariVersion","nativeSRD","shimAddIceCandidateNullOrEmpty","nativeAddIceCandidate","shimParameterlessSetLocalDescription","nativeSetLocalDescription","adapter","shimChrome","shimFirefox","shimSafari","userAgent","userAgentData","brands","chromium","brand","mozGetUserMedia","isSecureContext","supportsUnifiedPlan","RTCRtpTransceiver","utils.detectBrowser","commonShim","utils.extractVersion","utils.disableLog","utils.disableWarnings","chromeShim","chromeShim.shimPeerConnection","browserShim","commonShim.shimAddIceCandidateNullOrEmpty","commonShim.shimParameterlessSetLocalDescription","chromeShim.shimGetUserMedia","chromeShim.shimMediaStream","chromeShim.shimOnTrack","chromeShim.shimAddTrackRemoveTrack","chromeShim.shimGetSendersWithDtmf","chromeShim.shimSenderReceiverGetStats","chromeShim.fixNegotiationNeeded","commonShim.shimRTCIceCandidate","commonShim.shimRTCIceCandidateRelayProtocol","commonShim.shimConnectionState","commonShim.shimMaxMessageSize","commonShim.shimSendThrowTypeError","commonShim.removeExtmapAllowMixed","firefoxShim","firefoxShim.shimPeerConnection","firefoxShim.shimGetUserMedia","firefoxShim.shimOnTrack","firefoxShim.shimRemoveStream","firefoxShim.shimSenderGetStats","firefoxShim.shimReceiverGetStats","firefoxShim.shimRTCDataChannel","firefoxShim.shimAddTransceiver","firefoxShim.shimGetParameters","firefoxShim.shimCreateOffer","firefoxShim.shimCreateAnswer","safariShim","safariShim.shimRTCIceServerUrls","safariShim.shimCreateOfferLegacy","safariShim.shimCallbacksAPI","safariShim.shimLocalStreamsAPI","safariShim.shimRemoteStreamsAPI","safariShim.shimTrackEventTransceiver","safariShim.shimGetUserMedia","safariShim.shimAudioContext","adapterFactory","$parcel$export","$fcbcc7538a6776d5$export$f1c5f4c9cb95390b","chunkedMTU","_dataCount","chunk","chunks","total","ceil","start","end","__peerData","$fb63e766cfafaab9$var$webRTCAdapter","default","$fb63e766cfafaab9$export$25be9502477c137d","isWebRTCSupported","isBrowserSupported","getBrowser","getVersion","supportedBrowsers","minChromeVersion","minFirefoxVersion","isIOS","minSafariVersion","isUnifiedPlanSupported","tempPc","supported","close","platform","$9a84a32bf0bf36bb$export$f35f128fd59ea256","$0e5fd1585784c252$export$4e61f672936bec77","$4f4134156c446392$var$DEFAULT_CONFIG","credential","$4f4134156c446392$export$7debb50ef11d5e0b","noop","blobToArrayBuffer","fr","FileReader","onload","evt","readAsArrayBuffer","binaryStringToArrayBuffer","binary","byteArray","charCodeAt","isSecure","location","super","CLOUD_HOST","CLOUD_PORT","chunkedBrowsers","Chrome","chrome","defaultConfig","browserVersion","$gCcbY$pack","$gCcbY$unpack","supports","webRTC","audioVideo","binaryBlob","reliable","ordered","binaryType","validateId","randomToken","$257947e92926277a$export$243e62d78d3b544d","LogLevel","$c4dcfd1d1ea86647$exports","$257947e92926277a$export$2e2bcd8739ae039","logLevel","_logLevel","_print","error","setLogFunction","fn","rest","copy","$c4dcfd1d1ea86647$var$has","$c4dcfd1d1ea86647$var$prefix","$c4dcfd1d1ea86647$var$Events","$c4dcfd1d1ea86647$var$EE","context","once","$c4dcfd1d1ea86647$var$addListener","emitter","listener","_events","_eventsCount","$c4dcfd1d1ea86647$var$clearEvent","$c4dcfd1d1ea86647$var$EventEmitter","create","__proto__","eventNames","events","names","getOwnPropertySymbols","listeners","handlers","l","ee","listenerCount","emit","a1","a2","a3","a4","a5","len","removeListener","on","removeAllListeners","off","addListener","prefixed","EventEmitter","$78455e22dea96b8c$export$3157d57b4135e3bc","ConnectionType","$78455e22dea96b8c$export$9547aaa2e39030ff","PeerErrorType","$78455e22dea96b8c$export$7974935686149686","BaseConnectionErrorType","$78455e22dea96b8c$export$49ae800c114df41d","DataConnectionErrorType","$78455e22dea96b8c$export$89f507cf986a947","SerializationType","$78455e22dea96b8c$export$3b5c4a4b6354f023","SocketEventType","$78455e22dea96b8c$export$adb4a1754da6f10d","ServerMessageType","$78455e22dea96b8c$exports","$f5f881ec4575f1fc$exports","$8f5bfa60836d261d$export$4798917dbf149b79","secure","host","path","pingInterval","_disconnected","_messagesQueue","wsProtocol","_baseUrl","token","_id","wsUrl","_socket","WebSocket","onmessage","Message","onclose","_cleanup","Disconnected","onopen","_sendQueuedMessages","_scheduleHeartbeat","_wsPingTimer","setTimeout","_sendHeartbeat","_wsOpen","Heartbeat","copiedQueue","clearTimeout","$b82fb8fc0514bfc1$export$89e6bb5ad64bf4a","connection","startConnection","peerConnection","_startPeerConnection","Media","_stream","_addTracksToConnection","originator","dataConnection","config","_initializeDataChannel","_makeOffer","handleSDP","provider","_setupListeners","peerId","peer","connectionId","connectionType","onicecandidate","socket","Candidate","payload","dst","oniceconnectionstatechange","emitError","NegotiationFailed","ConnectionClosed","ondatachannel","getConnection","ontrack","mediaConnection","_addStreamToMediaConnection","cleanup","peerConnectionNotClosed","dataChannelNotClosed","offer","sdpTransform","metadata","Data","serialization","Offer","WebRTC","err_1","_makeAnswer","answer","Answer","self","handleCandidate","ice","$23779d1881157a18$export$6a678e589c8a4542","$23779d1881157a18$export$98871882f492de82","$5045192fc6d387ba$export$23a2a68283c24d80","open","_open","$5c1d08c7c57da9a3$export$4a84e95a2324ac29","static","ID_PREFIX","localStream","_localStream","remoteStream","_remoteStream","_negotiator","handleMessage","_payload","messages","_getMessages","_removeConnection","$abf266641927cd89$export$2c4e825dc9120f87","_options","_buildRequest","URL","searchParams","now","fetch","href","referrerPolicy","retrieveId","response","status","text","pathError","listAllPeers","helpfulError","json","$6366c4ca161bc297$export$d365f7ad9d7df9c9","MAX_BUFFERED_AMOUNT","chunked","_send","NotOpenYet","$a229bedbcaa6ca23$export$ff7c9d4c11d94e8b","bufferSize","_bufferSize","_handleDataMessage","_bufferedSend","msg","_buffering","_trySend","_buffer","bufferedAmount","_tryBuffer","$9fcfddb3ae148f88$export$f0a5a64d5bb37108","_chunkedData","chunker","Binary","deserializedData","peerData","_handleChunk","chunkInfo","count","_send_blob","_sendChunks","blobPromise","blobs","$bbaee3f15f714663$export$6f88fe47d32c9c94","_chunked","None","$817f931e3f9096cf$export$48880ac635f47186","decoder","decode","encodedData","MessageToBig","TextDecoder","$416260bce337df90$export$ecd1fc136c422448","DEFAULT_KEY","connections","plainConnections","k","_connections","destroyed","_destroyed","disconnected","userId","_serializers","raw","_lastServerId","_lostMessages","debug","serializers","hostname","logFunction","_api","_createServerConnection","_initialize","_abort","ServerError","_delayedAbort","InvalidID","BrowserIncompatible","_handleMessage","SocketError","Network","disconnect","Close","SocketClosed","src","Open","IdTaken","UnavailableID","InvalidKey","Leave","_cleanupPeer","Expire","PeerUnavailable","_addConnection","_storeMessage","connect","destroy","currentId","reconnect","_","peers","$dd0187d7f28e386f$export$2e2bcd8739ae039","NgrokError","details","timestamp","toISOString","troubleshooting","NgrokValidationError","NgrokErrorCodes","DEFAULT_PEER_CONFIG","processPeerConfig","reason","validateNgrokUrl","NgrokClientError","NgrokClientState","DISCONNECTED","VALIDATING","CONNECTING","CONNECTED","RECONNECTING","ERROR","STATES","currentState","startTime","lastStateChange","errorHistory","metrics","latency","current","average","samples","connectionQuality","reconnects","lastAttempt","errors","byType","stateChange","Set","handler","add","_emit","getState","getMetadata","uptime","_calculateUptime","updateMetrics","sum","sample","_updateConnectionQuality","setState","newState","_isValidTransition","from","to","oldState","recordError","errorRecord","state","unshift","pop","reset","getTime","avgLatency","recentErrors","validNextStates","VALID_TRANSITIONS","PeerConnection","networkConfig","targetPeerId","messageHandlers","messageQueue","maxQueueSize","lastPingTime","healthCheckInterval","clientId","generateClientId","initialize","isNgrok","Peer","retries","timeout","setupPeerEventHandlers","startHealthCheck","handleError","shouldAttemptReconnection","_handleReconnection","clearInterval","setInterval","checkConnectionHealth","sendPing","handleConnectionFailure","timeSinceLastPing","_getErrorMessage","network","_setConnectionTimeout","attempt","baseDelay","pow","jitter","delay","isClosing","existingConn","setupConnectionHandlers","processMessageQueue","handleIncomingData","_isClosing","dataHandler","originalError","isConnected","processImageData","frameData","callback","imagedata","imageData","width","height","canvas","document","createElement","ctx","getContext","dataUrl","img","Image","drawImage","onerror","createImageFromDataUrl","pixelData","convertToUint8ClampedArray","imgData","ImageData","putImageData","toDataURL","Uint8ClampedArray","isArray","values","createFrameHandler","streamType","hasImageData","imageUtils.processImageData","eventData","setKinectType","kinectType","initKinect","initPromise","isSuccess","success","normalizedResult","alreadyInitialized","rawData","startColor","feed","startDepth","_unpackRawDepthData","originalWidth","testValues","OffscreenCanvas","getImageData","depthValues","Uint16Array","depth","startRawDepth","unpackFunction","rawDepthData","createRawDepthHandler","startBodies","bodyData","bodies","floorClipPlane","trackingId","createBodyHandler","startKey","startDepthKey","startRGBD","startMultiFrame","frames","processedFrames","entries","imageUtils.convertToUint8ClampedArray","createMultiFrameHandler","stopAll","clear"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}